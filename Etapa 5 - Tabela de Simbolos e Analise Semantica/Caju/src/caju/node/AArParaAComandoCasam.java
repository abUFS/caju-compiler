/* This file was generated by SableCC (http://www.sablecc.org/). */

package caju.node;

import caju.analysis.*;

@SuppressWarnings("nls")
public final class AArParaAComandoCasam extends PAComandoCasam
{
    private PAListaAtrib _esq_;
    private PAExp _aExp_;
    private PAListaAtrib _dir_;
    private PAComando _aComando_;

    public AArParaAComandoCasam()
    {
        // Constructor
    }

    public AArParaAComandoCasam(
        @SuppressWarnings("hiding") PAListaAtrib _esq_,
        @SuppressWarnings("hiding") PAExp _aExp_,
        @SuppressWarnings("hiding") PAListaAtrib _dir_,
        @SuppressWarnings("hiding") PAComando _aComando_)
    {
        // Constructor
        setEsq(_esq_);

        setAExp(_aExp_);

        setDir(_dir_);

        setAComando(_aComando_);

    }

    @Override
    public Object clone()
    {
        return new AArParaAComandoCasam(
            cloneNode(this._esq_),
            cloneNode(this._aExp_),
            cloneNode(this._dir_),
            cloneNode(this._aComando_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAArParaAComandoCasam(this);
    }

    public PAListaAtrib getEsq()
    {
        return this._esq_;
    }

    public void setEsq(PAListaAtrib node)
    {
        if(this._esq_ != null)
        {
            this._esq_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._esq_ = node;
    }

    public PAExp getAExp()
    {
        return this._aExp_;
    }

    public void setAExp(PAExp node)
    {
        if(this._aExp_ != null)
        {
            this._aExp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._aExp_ = node;
    }

    public PAListaAtrib getDir()
    {
        return this._dir_;
    }

    public void setDir(PAListaAtrib node)
    {
        if(this._dir_ != null)
        {
            this._dir_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dir_ = node;
    }

    public PAComando getAComando()
    {
        return this._aComando_;
    }

    public void setAComando(PAComando node)
    {
        if(this._aComando_ != null)
        {
            this._aComando_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._aComando_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._esq_)
            + toString(this._aExp_)
            + toString(this._dir_)
            + toString(this._aComando_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._esq_ == child)
        {
            this._esq_ = null;
            return;
        }

        if(this._aExp_ == child)
        {
            this._aExp_ = null;
            return;
        }

        if(this._dir_ == child)
        {
            this._dir_ = null;
            return;
        }

        if(this._aComando_ == child)
        {
            this._aComando_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._esq_ == oldChild)
        {
            setEsq((PAListaAtrib) newChild);
            return;
        }

        if(this._aExp_ == oldChild)
        {
            setAExp((PAExp) newChild);
            return;
        }

        if(this._dir_ == oldChild)
        {
            setDir((PAListaAtrib) newChild);
            return;
        }

        if(this._aComando_ == oldChild)
        {
            setAComando((PAComando) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
