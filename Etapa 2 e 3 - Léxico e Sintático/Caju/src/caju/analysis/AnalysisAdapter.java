/* This file was generated by SableCC (http://www.sablecc.org/). */

package caju.analysis;

import java.util.*;
import caju.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrograma(APrograma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecVariavel(ADecVariavel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListaNomes(AListaNomes node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVirgulaId(AVirgulaId node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABaseTipo(ABaseTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVetorTipo(AVetorTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpColchete(AExpColchete node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumeroTipoBase(ANumeroTipoBase node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACaractereTipoBase(ACaractereTipoBase node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABooleanoTipoBase(ABooleanoTipoBase node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecFuncao(ADecFuncao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATipoTipoRetorno(ATipoTipoRetorno node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVazioTipoRetorno(AVazioTipoRetorno node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVazioParametros(AVazioParametros node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParametroParametros(AParametroParametros node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPipeParametro(APipeParametro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParametro(AParametro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABloco(ABloco node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAtrib(AAtrib node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListaAtrib(AListaAtrib node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVirgulaAtrib(AVirgulaAtrib node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACasamComando(ACasamComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASemCasamComando(ASemCasamComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEnquantoComando(AEnquantoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParaComando(AParaComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParaCadaComando(AParaCadaComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAtribComando(AAtribComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARetorneComando(ARetorneComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABlocoComando(ABlocoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAChamadaComando(AChamadaComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASeComandoCasam(ASeComandoCasam node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASeComandoSemCasam(ASeComandoSemCasam node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASeSenaoComandoSemCasam(ASeSenaoComandoSemCasam node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdVar(AIdVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIndexadaVar(AIndexadaVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOuExp(AOuExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExp1Exp(AExp1Exp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEExp1(AEExp1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExp1(AExp1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIgualExp2(AIgualExp2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExp2(AExp2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMenorIgualExp3(AMenorIgualExp3 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExp3(AExp3 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMaiorIgualExp4(AMaiorIgualExp4 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExp4(AExp4 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMenorExp5(AMenorExp5 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExp5(AExp5 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMaiorExp6(AMaiorExp6 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExp6(AExp6 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMaisExp7(AMaisExp7 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExp7(AExp7 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMenosExp8(AMenosExp8 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExp8(AExp8 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultExp9(AMultExp9 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExp9(AExp9 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADivExp10(ADivExp10 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExp10(AExp10 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANaoExp11(ANaoExp11 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExp11(AExp11 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParentesesExp12(AParentesesExp12 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExp12(AExp12 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAChamadaExp13(AChamadaExp13 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVarExp13(AVarExp13 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumeroExp13(ANumeroExp13 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACaractereExp13(ACaractereExp13 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABooleanoExp13(ABooleanoExp13 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAChamada(AChamada node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVazioListaExp(AVazioListaExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListaExpListaExp(AListaExpListaExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPipeExp(APipeExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIgnorar(TIgnorar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBaseCaractere(TBaseCaractere node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBaseNumero(TBaseNumero node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBaseBooleano(TBaseBooleano node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVetor(TVetor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVazio(TVazio node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCaractere(TCaractere node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBooleano(TBooleano node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNumero(TNumero node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVetorUnidimensional(TVetorUnidimensional node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInicio(TInicio node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFim(TFim node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentLinha(TComentLinha node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentBloco(TComentBloco node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEnquanto(TEnquanto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPara(TPara node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTParaCada(TParaCada node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSe(TSe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSenao(TSenao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRetorne(TRetorne node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMais(TMais node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenos(TMenos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMaior(TMaior node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenor(TMenor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMaiorIgual(TMaiorIgual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenorIgual(TMenorIgual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIgual(TIgual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNao(TNao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTE(TE node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOu(TOu node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAtribuir(TAtribuir node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPontoFinal(TPontoFinal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTExibir(TExibir node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLer(TLer node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVirgula(TVirgula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAbreColchete(TAbreColchete node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFechaColchete(TFechaColchete node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSeta(TSeta node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAbreParenteses(TAbreParenteses node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFechaParenteses(TFechaParenteses node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPipe(TPipe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPontoVirgula(TPontoVirgula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDoisPontos(TDoisPontos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTId(TId node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
