/* This file was generated by SableCC (http://www.sablecc.org/). */

package caju.analysis;

import java.util.*;
import caju.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArProgramaAPrograma(AArProgramaAPrograma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArDecVariavelADecVariavel(AArDecVariavelADecVariavel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArListaNomesAListaNomes(AArListaNomesAListaNomes node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArVirgulaIdAVirgulaId(AArVirgulaIdAVirgulaId node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArDecFuncaoADecFuncao(AArDecFuncaoADecFuncao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArParametrosAParametros(AArParametrosAParametros node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArParametrosVazioAParametros(AArParametrosVazioAParametros node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArParametroAParametro(AArParametroAParametro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArTipoBaseATipo(AArTipoBaseATipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArTipoVetorATipo(AArTipoVetorATipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArNumeroATipoBase(AArNumeroATipoBase node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArCaractereATipoBase(AArCaractereATipoBase node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArBooleanoATipoBase(AArBooleanoATipoBase node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArIdAVar(AArIdAVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArIndexadaAVar(AArIndexadaAVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArOuAExp(AArOuAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArEAExp(AArEAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArIgualAExp(AArIgualAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArMenorIgualAExp(AArMenorIgualAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArMaiorIgualAExp(AArMaiorIgualAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArMenorAExp(AArMenorAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArMaiorAExp(AArMaiorAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArMaisAExp(AArMaisAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArMenosAExp(AArMenosAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArMultAExp(AArMultAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArDivAExp(AArDivAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArNaoAExp(AArNaoAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArVarAExp(AArVarAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArChamadaAExp(AArChamadaAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArNumeroAExp(AArNumeroAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArCaractereAExp(AArCaractereAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArBooleanoAExp(AArBooleanoAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArStringAExp(AArStringAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArChamadaAChamada(AArChamadaAChamada node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArListaExpAListaExp(AArListaExpAListaExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArListaExpVazioAListaExp(AArListaExpVazioAListaExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArComandoCasamAComando(AArComandoCasamAComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArComandoSemCasamAComando(AArComandoSemCasamAComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArSeAComandoCasam(AArSeAComandoCasam node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArSenaoAComandoCasam(AArSenaoAComandoCasam node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArEnquantoAComandoCasam(AArEnquantoAComandoCasam node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArParaAComandoCasam(AArParaAComandoCasam node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArParaCadaAComandoCasam(AArParaCadaAComandoCasam node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArSeSenaoAComandoSemCasam(AArSeSenaoAComandoSemCasam node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArAtribAComandoSemCasam(AArAtribAComandoSemCasam node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArRetorneAComandoSemCasam(AArRetorneAComandoSemCasam node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArBlocoAComandoSemCasam(AArBlocoAComandoSemCasam node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArChamadaAComandoSemCasam(AArChamadaAComandoSemCasam node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArBlocoABloco(AArBlocoABloco node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArAtribAAtrib(AArAtribAAtrib node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArListaAtribAListaAtrib(AArListaAtribAListaAtrib node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArVirgulaAtribAVirgulaAtrib(AArVirgulaAtribAVirgulaAtrib node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArTipoVazioATipoRetorno(AArTipoVazioATipoRetorno node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArTipoRetornoATipoRetorno(AArTipoRetornoATipoRetorno node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIgnorar(TIgnorar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBaseCaractere(TBaseCaractere node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBaseNumero(TBaseNumero node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBaseBooleano(TBaseBooleano node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVetor(TVetor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVazio(TVazio node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCaractere(TCaractere node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBooleano(TBooleano node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNumero(TNumero node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVetorUnidimensional(TVetorUnidimensional node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInicio(TInicio node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFim(TFim node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentLinha(TComentLinha node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentBloco(TComentBloco node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEnquanto(TEnquanto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPara(TPara node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTParaCada(TParaCada node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSe(TSe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSenao(TSenao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRetorne(TRetorne node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMais(TMais node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenos(TMenos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMaior(TMaior node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenor(TMenor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMaiorIgual(TMaiorIgual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenorIgual(TMenorIgual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIgual(TIgual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNao(TNao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTE(TE node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOu(TOu node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAtribuir(TAtribuir node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPontoFinal(TPontoFinal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVirgula(TVirgula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAbreColchete(TAbreColchete node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFechaColchete(TFechaColchete node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSeta(TSeta node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAbreParenteses(TAbreParenteses node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFechaParenteses(TFechaParenteses node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPipe(TPipe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPontoVirgula(TPontoVirgula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDoisPontos(TDoisPontos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTId(TId node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
