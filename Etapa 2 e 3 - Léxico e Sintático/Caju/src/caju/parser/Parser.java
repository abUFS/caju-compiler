/* This file was generated by SableCC (http://www.sablecc.org/). */

package caju.parser;

import caju.lexer.*;
import caju.node.*;
import caju.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList<Object> nodeList;

    private final Lexer lexer;
    private final ListIterator<Object> stack = new LinkedList<Object>().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    @SuppressWarnings({"unchecked","unused"})
    private void push(int numstate, ArrayList<Object> listNode) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            // int middle = (low + high) / 2;
            int middle = (low + high) >>> 1;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList<Object> pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList<Object> list = new ArrayList<Object>();
		        list.add(this.lexer.next());
                        push(this.action[1], list);
                    }
		    break;
                case REDUCE:
                    {
                        int reduction = this.action[1];
                        if(reduction < 500) reduce_0(reduction);
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PAPrograma node1 = (PAPrograma) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }

    private void reduce_0(int reduction) throws IOException, LexerException, ParserException
    {
        switch(reduction)
        {
            case 0: /* reduce AAprograma1Programa */
            {
                ArrayList<Object> list = new0();
                push(goTo(0), list);
            }
            break;
            case 1: /* reduce AAprograma2Programa */
            {
                ArrayList<Object> list = new1();
                push(goTo(0), list);
            }
            break;
            case 2: /* reduce AAprograma3Programa */
            {
                ArrayList<Object> list = new2();
                push(goTo(0), list);
            }
            break;
            case 3: /* reduce AAprograma4Programa */
            {
                ArrayList<Object> list = new3();
                push(goTo(0), list);
            }
            break;
            case 4: /* reduce ADecVariavel */
            {
                ArrayList<Object> list = new4();
                push(goTo(1), list);
            }
            break;
            case 5: /* reduce AAlistanomes1ListaNomes */
            {
                ArrayList<Object> list = new5();
                push(goTo(2), list);
            }
            break;
            case 6: /* reduce AAlistanomes2ListaNomes */
            {
                ArrayList<Object> list = new6();
                push(goTo(2), list);
            }
            break;
            case 7: /* reduce AVirgulaId */
            {
                ArrayList<Object> list = new7();
                push(goTo(3), list);
            }
            break;
            case 8: /* reduce ABaseTipo */
            {
                ArrayList<Object> list = new8();
                push(goTo(4), list);
            }
            break;
            case 9: /* reduce AAvetortipo1Tipo */
            {
                ArrayList<Object> list = new9();
                push(goTo(4), list);
            }
            break;
            case 10: /* reduce AAvetortipo2Tipo */
            {
                ArrayList<Object> list = new10();
                push(goTo(4), list);
            }
            break;
            case 11: /* reduce AExpColchete */
            {
                ArrayList<Object> list = new11();
                push(goTo(5), list);
            }
            break;
            case 12: /* reduce ANumeroTipoBase */
            {
                ArrayList<Object> list = new12();
                push(goTo(6), list);
            }
            break;
            case 13: /* reduce ACaractereTipoBase */
            {
                ArrayList<Object> list = new13();
                push(goTo(6), list);
            }
            break;
            case 14: /* reduce ABooleanoTipoBase */
            {
                ArrayList<Object> list = new14();
                push(goTo(6), list);
            }
            break;
            case 15: /* reduce AAdecfuncao1$Tipo1DecFuncao */
            {
                ArrayList<Object> list = new15();
                push(goTo(7), list);
            }
            break;
            case 16: /* reduce AAdecfuncao1$Vazio1DecFuncao */
            {
                ArrayList<Object> list = new16();
                push(goTo(7), list);
            }
            break;
            case 17: /* reduce AAdecfuncao2$Tipo1DecFuncao */
            {
                ArrayList<Object> list = new17();
                push(goTo(7), list);
            }
            break;
            case 18: /* reduce AAdecfuncao2$Vazio1DecFuncao */
            {
                ArrayList<Object> list = new18();
                push(goTo(7), list);
            }
            break;
            case 19: /* reduce AVazioParametros */
            {
                ArrayList<Object> list = new19();
                push(goTo(8), list);
            }
            break;
            case 20: /* reduce AAparametroparametros1Parametros */
            {
                ArrayList<Object> list = new20();
                push(goTo(8), list);
            }
            break;
            case 21: /* reduce AAparametroparametros2Parametros */
            {
                ArrayList<Object> list = new21();
                push(goTo(8), list);
            }
            break;
            case 22: /* reduce APipeParametro */
            {
                ArrayList<Object> list = new22();
                push(goTo(9), list);
            }
            break;
            case 23: /* reduce AParametro */
            {
                ArrayList<Object> list = new23();
                push(goTo(10), list);
            }
            break;
            case 24: /* reduce AAbloco1Bloco */
            {
                ArrayList<Object> list = new24();
                push(goTo(11), list);
            }
            break;
            case 25: /* reduce AAbloco2Bloco */
            {
                ArrayList<Object> list = new25();
                push(goTo(11), list);
            }
            break;
            case 26: /* reduce AAbloco3Bloco */
            {
                ArrayList<Object> list = new26();
                push(goTo(11), list);
            }
            break;
            case 27: /* reduce AAbloco4Bloco */
            {
                ArrayList<Object> list = new27();
                push(goTo(11), list);
            }
            break;
            case 28: /* reduce AAtrib */
            {
                ArrayList<Object> list = new28();
                push(goTo(12), list);
            }
            break;
            case 29: /* reduce AAlistaatrib1ListaAtrib */
            {
                ArrayList<Object> list = new29();
                push(goTo(13), list);
            }
            break;
            case 30: /* reduce AAlistaatrib2ListaAtrib */
            {
                ArrayList<Object> list = new30();
                push(goTo(13), list);
            }
            break;
            case 31: /* reduce AVirgulaAtrib */
            {
                ArrayList<Object> list = new31();
                push(goTo(14), list);
            }
            break;
            case 32: /* reduce ACasamComando */
            {
                ArrayList<Object> list = new32();
                push(goTo(15), list);
            }
            break;
            case 33: /* reduce ASemCasamComando */
            {
                ArrayList<Object> list = new33();
                push(goTo(15), list);
            }
            break;
            case 34: /* reduce ASeComandoCasam */
            {
                ArrayList<Object> list = new34();
                push(goTo(16), list);
            }
            break;
            case 35: /* reduce ASenaoComandoCasam */
            {
                ArrayList<Object> list = new35();
                push(goTo(16), list);
            }
            break;
            case 36: /* reduce AEnquantoComandoCasam */
            {
                ArrayList<Object> list = new36();
                push(goTo(16), list);
            }
            break;
            case 37: /* reduce AParaComandoCasam */
            {
                ArrayList<Object> list = new37();
                push(goTo(16), list);
            }
            break;
            case 38: /* reduce AParaCadaComandoCasam */
            {
                ArrayList<Object> list = new38();
                push(goTo(16), list);
            }
            break;
            case 39: /* reduce ASeSenaoComandoSemCasam */
            {
                ArrayList<Object> list = new39();
                push(goTo(17), list);
            }
            break;
            case 40: /* reduce AAtribComandoSemCasam */
            {
                ArrayList<Object> list = new40();
                push(goTo(17), list);
            }
            break;
            case 41: /* reduce AAretornecomandosemcasam1ComandoSemCasam */
            {
                ArrayList<Object> list = new41();
                push(goTo(17), list);
            }
            break;
            case 42: /* reduce AAretornecomandosemcasam2ComandoSemCasam */
            {
                ArrayList<Object> list = new42();
                push(goTo(17), list);
            }
            break;
            case 43: /* reduce ABlocoComandoSemCasam */
            {
                ArrayList<Object> list = new43();
                push(goTo(17), list);
            }
            break;
            case 44: /* reduce AChamadaComandoSemCasam */
            {
                ArrayList<Object> list = new44();
                push(goTo(17), list);
            }
            break;
            case 45: /* reduce AIdVar */
            {
                ArrayList<Object> list = new45();
                push(goTo(18), list);
            }
            break;
            case 46: /* reduce AIndexadaVar */
            {
                ArrayList<Object> list = new46();
                push(goTo(18), list);
            }
            break;
            case 47: /* reduce AOuExp */
            {
                ArrayList<Object> list = new47();
                push(goTo(19), list);
            }
            break;
            case 48: /* reduce AExp1Exp */
            {
                ArrayList<Object> list = new48();
                push(goTo(19), list);
            }
            break;
            case 49: /* reduce AEExp1 */
            {
                ArrayList<Object> list = new49();
                push(goTo(20), list);
            }
            break;
            case 50: /* reduce AExp1 */
            {
                ArrayList<Object> list = new50();
                push(goTo(20), list);
            }
            break;
            case 51: /* reduce AIgualExp2 */
            {
                ArrayList<Object> list = new51();
                push(goTo(21), list);
            }
            break;
            case 52: /* reduce AExp2 */
            {
                ArrayList<Object> list = new52();
                push(goTo(21), list);
            }
            break;
            case 53: /* reduce AMenorIgualExp3 */
            {
                ArrayList<Object> list = new53();
                push(goTo(22), list);
            }
            break;
            case 54: /* reduce AExp3 */
            {
                ArrayList<Object> list = new54();
                push(goTo(22), list);
            }
            break;
            case 55: /* reduce AMaiorIgualExp4 */
            {
                ArrayList<Object> list = new55();
                push(goTo(23), list);
            }
            break;
            case 56: /* reduce AExp4 */
            {
                ArrayList<Object> list = new56();
                push(goTo(23), list);
            }
            break;
            case 57: /* reduce AMenorExp5 */
            {
                ArrayList<Object> list = new57();
                push(goTo(24), list);
            }
            break;
            case 58: /* reduce AExp5 */
            {
                ArrayList<Object> list = new58();
                push(goTo(24), list);
            }
            break;
            case 59: /* reduce AMaiorExp6 */
            {
                ArrayList<Object> list = new59();
                push(goTo(25), list);
            }
            break;
            case 60: /* reduce AExp6 */
            {
                ArrayList<Object> list = new60();
                push(goTo(25), list);
            }
            break;
            case 61: /* reduce AMaisExp7 */
            {
                ArrayList<Object> list = new61();
                push(goTo(26), list);
            }
            break;
            case 62: /* reduce AExp7 */
            {
                ArrayList<Object> list = new62();
                push(goTo(26), list);
            }
            break;
            case 63: /* reduce AMenosExp8 */
            {
                ArrayList<Object> list = new63();
                push(goTo(27), list);
            }
            break;
            case 64: /* reduce AExp8 */
            {
                ArrayList<Object> list = new64();
                push(goTo(27), list);
            }
            break;
            case 65: /* reduce AMultExp9 */
            {
                ArrayList<Object> list = new65();
                push(goTo(28), list);
            }
            break;
            case 66: /* reduce AExp9 */
            {
                ArrayList<Object> list = new66();
                push(goTo(28), list);
            }
            break;
            case 67: /* reduce ADivExp10 */
            {
                ArrayList<Object> list = new67();
                push(goTo(29), list);
            }
            break;
            case 68: /* reduce AExp10 */
            {
                ArrayList<Object> list = new68();
                push(goTo(29), list);
            }
            break;
            case 69: /* reduce ANaoExp11 */
            {
                ArrayList<Object> list = new69();
                push(goTo(30), list);
            }
            break;
            case 70: /* reduce AExp11 */
            {
                ArrayList<Object> list = new70();
                push(goTo(30), list);
            }
            break;
            case 71: /* reduce AParentesesExp12 */
            {
                ArrayList<Object> list = new71();
                push(goTo(31), list);
            }
            break;
            case 72: /* reduce AExp12 */
            {
                ArrayList<Object> list = new72();
                push(goTo(31), list);
            }
            break;
            case 73: /* reduce AChamadaExp13 */
            {
                ArrayList<Object> list = new73();
                push(goTo(32), list);
            }
            break;
            case 74: /* reduce AVarExp13 */
            {
                ArrayList<Object> list = new74();
                push(goTo(32), list);
            }
            break;
            case 75: /* reduce ANumeroExp13 */
            {
                ArrayList<Object> list = new75();
                push(goTo(32), list);
            }
            break;
            case 76: /* reduce ACaractereExp13 */
            {
                ArrayList<Object> list = new76();
                push(goTo(32), list);
            }
            break;
            case 77: /* reduce ABooleanoExp13 */
            {
                ArrayList<Object> list = new77();
                push(goTo(32), list);
            }
            break;
            case 78: /* reduce AStringExp13 */
            {
                ArrayList<Object> list = new78();
                push(goTo(32), list);
            }
            break;
            case 79: /* reduce AChamada */
            {
                ArrayList<Object> list = new79();
                push(goTo(33), list);
            }
            break;
            case 80: /* reduce AVazioListaExp */
            {
                ArrayList<Object> list = new80();
                push(goTo(34), list);
            }
            break;
            case 81: /* reduce AAlistaexplistaexp1ListaExp */
            {
                ArrayList<Object> list = new81();
                push(goTo(34), list);
            }
            break;
            case 82: /* reduce AAlistaexplistaexp2ListaExp */
            {
                ArrayList<Object> list = new82();
                push(goTo(34), list);
            }
            break;
            case 83: /* reduce APipeExp */
            {
                ArrayList<Object> list = new83();
                push(goTo(35), list);
            }
            break;
            case 84: /* reduce ATerminal$DecVariavel */
            {
                ArrayList<Object> list = new84();
                push(goTo(36), list);
            }
            break;
            case 85: /* reduce ANonTerminal$DecVariavel */
            {
                ArrayList<Object> list = new85();
                push(goTo(36), list);
            }
            break;
            case 86: /* reduce ATerminal$DecFuncao */
            {
                ArrayList<Object> list = new86();
                push(goTo(37), list);
            }
            break;
            case 87: /* reduce ANonTerminal$DecFuncao */
            {
                ArrayList<Object> list = new87();
                push(goTo(37), list);
            }
            break;
            case 88: /* reduce ATerminal$VirgulaId */
            {
                ArrayList<Object> list = new88();
                push(goTo(38), list);
            }
            break;
            case 89: /* reduce ANonTerminal$VirgulaId */
            {
                ArrayList<Object> list = new89();
                push(goTo(38), list);
            }
            break;
            case 90: /* reduce ATerminal$ExpColchete */
            {
                ArrayList<Object> list = new90();
                push(goTo(39), list);
            }
            break;
            case 91: /* reduce ANonTerminal$ExpColchete */
            {
                ArrayList<Object> list = new91();
                push(goTo(39), list);
            }
            break;
            case 92: /* reduce ATerminal$PipeParametro */
            {
                ArrayList<Object> list = new92();
                push(goTo(40), list);
            }
            break;
            case 93: /* reduce ANonTerminal$PipeParametro */
            {
                ArrayList<Object> list = new93();
                push(goTo(40), list);
            }
            break;
            case 94: /* reduce ATerminal$Comando */
            {
                ArrayList<Object> list = new94();
                push(goTo(41), list);
            }
            break;
            case 95: /* reduce ANonTerminal$Comando */
            {
                ArrayList<Object> list = new95();
                push(goTo(41), list);
            }
            break;
            case 96: /* reduce ATerminal$VirgulaAtrib */
            {
                ArrayList<Object> list = new96();
                push(goTo(42), list);
            }
            break;
            case 97: /* reduce ANonTerminal$VirgulaAtrib */
            {
                ArrayList<Object> list = new97();
                push(goTo(42), list);
            }
            break;
            case 98: /* reduce ATerminal$PipeExp */
            {
                ArrayList<Object> list = new98();
                push(goTo(43), list);
            }
            break;
            case 99: /* reduce ANonTerminal$PipeExp */
            {
                ArrayList<Object> list = new99();
                push(goTo(43), list);
            }
            break;
        }
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new0() /* reduce AAprograma1Programa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PAPrograma paprogramaNode1;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        }
        {
            // Block
        }

        paprogramaNode1 = new AArProgramaAPrograma(listNode2, listNode3);
        }
	nodeList.add(paprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new1() /* reduce AAprograma2Programa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAPrograma paprogramaNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        }

        paprogramaNode1 = new AArProgramaAPrograma(listNode3, listNode4);
        }
	nodeList.add(paprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new2() /* reduce AAprograma3Programa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAPrograma paprogramaNode1;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        {
            // Block
        }
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList1.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        paprogramaNode1 = new AArProgramaAPrograma(listNode2, listNode4);
        }
	nodeList.add(paprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new3() /* reduce AAprograma4Programa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAPrograma paprogramaNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        listNode4 = (LinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        paprogramaNode1 = new AArProgramaAPrograma(listNode3, listNode5);
        }
	nodeList.add(paprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new4() /* reduce ADecVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PADecVariavel padecvariavelNode1;
        {
            // Block
        PATipo patipoNode2;
        PAListaNomes palistanomesNode3;
        patipoNode2 = (PATipo)nodeArrayList1.get(0);
        palistanomesNode3 = (PAListaNomes)nodeArrayList2.get(0);

        padecvariavelNode1 = new AArDecVariavelADecVariavel(patipoNode2, palistanomesNode3);
        }
	nodeList.add(padecvariavelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new5() /* reduce AAlistanomes1ListaNomes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAListaNomes palistanomesNode1;
        {
            // Block
        TId tidNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        tidNode2 = (TId)nodeArrayList1.get(0);
        {
            // Block
        }

        palistanomesNode1 = new AArListaNomesAListaNomes(tidNode2, listNode3);
        }
	nodeList.add(palistanomesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new6() /* reduce AAlistanomes2ListaNomes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAListaNomes palistanomesNode1;
        {
            // Block
        TId tidNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        tidNode2 = (TId)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        palistanomesNode1 = new AArListaNomesAListaNomes(tidNode2, listNode4);
        }
	nodeList.add(palistanomesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new7() /* reduce AVirgulaId */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAVirgulaId pavirgulaidNode1;
        {
            // Block
        TId tidNode2;
        tidNode2 = (TId)nodeArrayList2.get(0);

        pavirgulaidNode1 = new AArVirgulaIdAVirgulaId(tidNode2);
        }
	nodeList.add(pavirgulaidNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new8() /* reduce ABaseTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PATipo patipoNode1;
        {
            // Block
        PATipoBase patipobaseNode2;
        patipobaseNode2 = (PATipoBase)nodeArrayList1.get(0);

        patipoNode1 = new AArTipoBaseATipo(patipobaseNode2);
        }
	nodeList.add(patipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new9() /* reduce AAvetortipo1Tipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PATipo patipoNode1;
        {
            // Block
        PATipoBase patipobaseNode2;
        PAExp paexpNode3;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        patipobaseNode2 = (PATipoBase)nodeArrayList2.get(0);
        paexpNode3 = (PAExp)nodeArrayList3.get(0);
        {
            // Block
        }

        patipoNode1 = new AArTipoVetorATipo(patipobaseNode2, paexpNode3, listNode4);
        }
	nodeList.add(patipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new10() /* reduce AAvetortipo2Tipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PATipo patipoNode1;
        {
            // Block
        PATipoBase patipobaseNode2;
        PAExp paexpNode3;
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        patipobaseNode2 = (PATipoBase)nodeArrayList2.get(0);
        paexpNode3 = (PAExp)nodeArrayList3.get(0);
        {
            // Block
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        listNode4 = (LinkedList)nodeArrayList4.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        patipoNode1 = new AArTipoVetorATipo(patipobaseNode2, paexpNode3, listNode5);
        }
	nodeList.add(patipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new11() /* reduce AExpColchete */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAExp paexpNode1;
        paexpNode1 = (PAExp)nodeArrayList2.get(0);
	nodeList.add(paexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new12() /* reduce ANumeroTipoBase */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PATipoBase patipobaseNode1;
        {
            // Block
        TBaseNumero tbasenumeroNode2;
        tbasenumeroNode2 = (TBaseNumero)nodeArrayList1.get(0);

        patipobaseNode1 = new AArNumeroATipoBase(tbasenumeroNode2);
        }
	nodeList.add(patipobaseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new13() /* reduce ACaractereTipoBase */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PATipoBase patipobaseNode1;
        {
            // Block
        TBaseCaractere tbasecaractereNode2;
        tbasecaractereNode2 = (TBaseCaractere)nodeArrayList1.get(0);

        patipobaseNode1 = new AArCaractereATipoBase(tbasecaractereNode2);
        }
	nodeList.add(patipobaseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new14() /* reduce ABooleanoTipoBase */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PATipoBase patipobaseNode1;
        {
            // Block
        TBaseBooleano tbasebooleanoNode2;
        tbasebooleanoNode2 = (TBaseBooleano)nodeArrayList1.get(0);

        patipobaseNode1 = new AArBooleanoATipoBase(tbasebooleanoNode2);
        }
	nodeList.add(patipobaseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new15() /* reduce AAdecfuncao1$Tipo1DecFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PADecFuncao padecfuncaoNode1;
        {
            // Block
        PATipoRetorno patiporetornoNode2;
        TId tidNode4;
        PAParametros paparametrosNode5;
        PABloco pablocoNode6;
        {
            // Block
        PATipo patipoNode3;
        patipoNode3 = (PATipo)nodeArrayList1.get(0);

        patiporetornoNode2 = new AArTipoRetornoATipoRetorno(patipoNode3);
        }
        tidNode4 = (TId)nodeArrayList2.get(0);
        paparametrosNode5 = (PAParametros)nodeArrayList4.get(0);
        pablocoNode6 = (PABloco)nodeArrayList6.get(0);

        padecfuncaoNode1 = new AArDecFuncaoADecFuncao(patiporetornoNode2, tidNode4, paparametrosNode5, pablocoNode6);
        }
	nodeList.add(padecfuncaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new16() /* reduce AAdecfuncao1$Vazio1DecFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PADecFuncao padecfuncaoNode1;
        {
            // Block
        PATipoRetorno patiporetornoNode2;
        TId tidNode3;
        PAParametros paparametrosNode4;
        PABloco pablocoNode5;
        {
            // Block

        patiporetornoNode2 = new AArTipoVazioATipoRetorno();
        }
        tidNode3 = (TId)nodeArrayList2.get(0);
        paparametrosNode4 = (PAParametros)nodeArrayList4.get(0);
        pablocoNode5 = (PABloco)nodeArrayList6.get(0);

        padecfuncaoNode1 = new AArDecFuncaoADecFuncao(patiporetornoNode2, tidNode3, paparametrosNode4, pablocoNode5);
        }
	nodeList.add(padecfuncaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new17() /* reduce AAdecfuncao2$Tipo1DecFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PADecFuncao padecfuncaoNode1;
        {
            // Block
        PATipoRetorno patiporetornoNode2;
        TId tidNode4;
        PAParametros paparametrosNode5;
        PABloco pablocoNode6;
        {
            // Block
        PATipo patipoNode3;
        patipoNode3 = (PATipo)nodeArrayList2.get(0);

        patiporetornoNode2 = new AArTipoRetornoATipoRetorno(patipoNode3);
        }
        tidNode4 = (TId)nodeArrayList3.get(0);
        paparametrosNode5 = (PAParametros)nodeArrayList5.get(0);
        pablocoNode6 = (PABloco)nodeArrayList7.get(0);

        padecfuncaoNode1 = new AArDecFuncaoADecFuncao(patiporetornoNode2, tidNode4, paparametrosNode5, pablocoNode6);
        }
	nodeList.add(padecfuncaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new18() /* reduce AAdecfuncao2$Vazio1DecFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PADecFuncao padecfuncaoNode1;
        {
            // Block
        PATipoRetorno patiporetornoNode2;
        TId tidNode3;
        PAParametros paparametrosNode4;
        PABloco pablocoNode5;
        {
            // Block

        patiporetornoNode2 = new AArTipoVazioATipoRetorno();
        }
        tidNode3 = (TId)nodeArrayList3.get(0);
        paparametrosNode4 = (PAParametros)nodeArrayList5.get(0);
        pablocoNode5 = (PABloco)nodeArrayList7.get(0);

        padecfuncaoNode1 = new AArDecFuncaoADecFuncao(patiporetornoNode2, tidNode3, paparametrosNode4, pablocoNode5);
        }
	nodeList.add(padecfuncaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new19() /* reduce AVazioParametros */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PAParametros paparametrosNode1;
        {
            // Block

        paparametrosNode1 = new AArParametrosVazioAParametros();
        }
	nodeList.add(paparametrosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new20() /* reduce AAparametroparametros1Parametros */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAParametros paparametrosNode1;
        {
            // Block
        PAParametro paparametroNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        paparametroNode2 = (PAParametro)nodeArrayList1.get(0);
        {
            // Block
        }

        paparametrosNode1 = new AArParametrosAParametros(paparametroNode2, listNode3);
        }
	nodeList.add(paparametrosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new21() /* reduce AAparametroparametros2Parametros */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAParametros paparametrosNode1;
        {
            // Block
        PAParametro paparametroNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        paparametroNode2 = (PAParametro)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        paparametrosNode1 = new AArParametrosAParametros(paparametroNode2, listNode4);
        }
	nodeList.add(paparametrosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new22() /* reduce APipeParametro */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAParametro paparametroNode1;
        paparametroNode1 = (PAParametro)nodeArrayList2.get(0);
	nodeList.add(paparametroNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new23() /* reduce AParametro */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAParametro paparametroNode1;
        {
            // Block
        PATipo patipoNode2;
        TId tidNode3;
        patipoNode2 = (PATipo)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);

        paparametroNode1 = new AArParametroAParametro(patipoNode2, tidNode3);
        }
	nodeList.add(paparametroNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new24() /* reduce AAbloco1Bloco */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PABloco pablocoNode1;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        }
        {
            // Block
        }

        pablocoNode1 = new AArBlocoABloco(listNode2, listNode3);
        }
	nodeList.add(pablocoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new25() /* reduce AAbloco2Bloco */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PABloco pablocoNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        }

        pablocoNode1 = new AArBlocoABloco(listNode3, listNode4);
        }
	nodeList.add(pablocoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new26() /* reduce AAbloco3Bloco */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PABloco pablocoNode1;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        {
            // Block
        }
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pablocoNode1 = new AArBlocoABloco(listNode2, listNode4);
        }
	nodeList.add(pablocoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new27() /* reduce AAbloco4Bloco */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PABloco pablocoNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        listNode4 = (LinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        pablocoNode1 = new AArBlocoABloco(listNode3, listNode5);
        }
	nodeList.add(pablocoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new28() /* reduce AAtrib */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAAtrib paatribNode1;
        {
            // Block
        PAVar pavarNode2;
        PAExp paexpNode3;
        pavarNode2 = (PAVar)nodeArrayList1.get(0);
        paexpNode3 = (PAExp)nodeArrayList3.get(0);

        paatribNode1 = new AArAtribAAtrib(pavarNode2, paexpNode3);
        }
	nodeList.add(paatribNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new29() /* reduce AAlistaatrib1ListaAtrib */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAListaAtrib palistaatribNode1;
        {
            // Block
        PAAtrib paatribNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        paatribNode2 = (PAAtrib)nodeArrayList1.get(0);
        {
            // Block
        }

        palistaatribNode1 = new AArListaAtribAListaAtrib(paatribNode2, listNode3);
        }
	nodeList.add(palistaatribNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new30() /* reduce AAlistaatrib2ListaAtrib */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAListaAtrib palistaatribNode1;
        {
            // Block
        PAAtrib paatribNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        paatribNode2 = (PAAtrib)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        palistaatribNode1 = new AArListaAtribAListaAtrib(paatribNode2, listNode4);
        }
	nodeList.add(palistaatribNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new31() /* reduce AVirgulaAtrib */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAAtrib paatribNode1;
        paatribNode1 = (PAAtrib)nodeArrayList2.get(0);
	nodeList.add(paatribNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new32() /* reduce ACasamComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAComando pacomandoNode1;
        {
            // Block
        PAComandoCasam pacomandocasamNode2;
        pacomandocasamNode2 = (PAComandoCasam)nodeArrayList1.get(0);

        pacomandoNode1 = new AArComandoCasamAComando(pacomandocasamNode2);
        }
	nodeList.add(pacomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new33() /* reduce ASemCasamComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAComando pacomandoNode1;
        {
            // Block
        PAComandoSemCasam pacomandosemcasamNode2;
        pacomandosemcasamNode2 = (PAComandoSemCasam)nodeArrayList1.get(0);

        pacomandoNode1 = new AArComandoSemCasamAComando(pacomandosemcasamNode2);
        }
	nodeList.add(pacomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new34() /* reduce ASeComandoCasam */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAComandoCasam pacomandocasamNode1;
        {
            // Block
        PAExp paexpNode2;
        PAComando pacomandoNode3;
        paexpNode2 = (PAExp)nodeArrayList3.get(0);
        pacomandoNode3 = (PAComando)nodeArrayList5.get(0);

        pacomandocasamNode1 = new AArSeAComandoCasam(paexpNode2, pacomandoNode3);
        }
	nodeList.add(pacomandocasamNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new35() /* reduce ASenaoComandoCasam */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAComandoCasam pacomandocasamNode1;
        {
            // Block
        PAExp paexpNode2;
        PAComandoSemCasam pacomandosemcasamNode3;
        PAComandoCasam pacomandocasamNode4;
        paexpNode2 = (PAExp)nodeArrayList3.get(0);
        pacomandosemcasamNode3 = (PAComandoSemCasam)nodeArrayList5.get(0);
        pacomandocasamNode4 = (PAComandoCasam)nodeArrayList7.get(0);

        pacomandocasamNode1 = new AArSenaoAComandoCasam(paexpNode2, pacomandosemcasamNode3, pacomandocasamNode4);
        }
	nodeList.add(pacomandocasamNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new36() /* reduce AEnquantoComandoCasam */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAComandoCasam pacomandocasamNode1;
        {
            // Block
        PAExp paexpNode2;
        PAComando pacomandoNode3;
        paexpNode2 = (PAExp)nodeArrayList3.get(0);
        pacomandoNode3 = (PAComando)nodeArrayList5.get(0);

        pacomandocasamNode1 = new AArEnquantoAComandoCasam(paexpNode2, pacomandoNode3);
        }
	nodeList.add(pacomandocasamNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new37() /* reduce AParaComandoCasam */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAComandoCasam pacomandocasamNode1;
        {
            // Block
        PAListaAtrib palistaatribNode2;
        PAExp paexpNode3;
        PAListaAtrib palistaatribNode4;
        PAComando pacomandoNode5;
        palistaatribNode2 = (PAListaAtrib)nodeArrayList3.get(0);
        paexpNode3 = (PAExp)nodeArrayList5.get(0);
        palistaatribNode4 = (PAListaAtrib)nodeArrayList7.get(0);
        pacomandoNode5 = (PAComando)nodeArrayList9.get(0);

        pacomandocasamNode1 = new AArParaAComandoCasam(palistaatribNode2, paexpNode3, palistaatribNode4, pacomandoNode5);
        }
	nodeList.add(pacomandocasamNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new38() /* reduce AParaCadaComandoCasam */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAComandoCasam pacomandocasamNode1;
        {
            // Block
        PATipo patipoNode2;
        TId tidNode3;
        TId tidNode4;
        PAComando pacomandoNode5;
        patipoNode2 = (PATipo)nodeArrayList3.get(0);
        tidNode3 = (TId)nodeArrayList4.get(0);
        tidNode4 = (TId)nodeArrayList6.get(0);
        pacomandoNode5 = (PAComando)nodeArrayList8.get(0);

        pacomandocasamNode1 = new AArParaCadaAComandoCasam(patipoNode2, tidNode3, tidNode4, pacomandoNode5);
        }
	nodeList.add(pacomandocasamNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new39() /* reduce ASeSenaoComandoSemCasam */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAComandoSemCasam pacomandosemcasamNode1;
        {
            // Block
        PAExp paexpNode2;
        PAComandoSemCasam pacomandosemcasamNode3;
        PAComandoSemCasam pacomandosemcasamNode4;
        paexpNode2 = (PAExp)nodeArrayList3.get(0);
        pacomandosemcasamNode3 = (PAComandoSemCasam)nodeArrayList5.get(0);
        pacomandosemcasamNode4 = (PAComandoSemCasam)nodeArrayList7.get(0);

        pacomandosemcasamNode1 = new AArSeSenaoAComandoSemCasam(paexpNode2, pacomandosemcasamNode3, pacomandosemcasamNode4);
        }
	nodeList.add(pacomandosemcasamNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new40() /* reduce AAtribComandoSemCasam */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAComandoSemCasam pacomandosemcasamNode1;
        {
            // Block
        PAAtrib paatribNode2;
        paatribNode2 = (PAAtrib)nodeArrayList1.get(0);

        pacomandosemcasamNode1 = new AArAtribAComandoSemCasam(paatribNode2);
        }
	nodeList.add(pacomandosemcasamNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new41() /* reduce AAretornecomandosemcasam1ComandoSemCasam */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAComandoSemCasam pacomandosemcasamNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;

        pacomandosemcasamNode1 = new AArRetorneAComandoSemCasam(null);
        }
	nodeList.add(pacomandosemcasamNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new42() /* reduce AAretornecomandosemcasam2ComandoSemCasam */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAComandoSemCasam pacomandosemcasamNode1;
        {
            // Block
        PAExp paexpNode2;
        paexpNode2 = (PAExp)nodeArrayList2.get(0);

        pacomandosemcasamNode1 = new AArRetorneAComandoSemCasam(paexpNode2);
        }
	nodeList.add(pacomandosemcasamNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new43() /* reduce ABlocoComandoSemCasam */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAComandoSemCasam pacomandosemcasamNode1;
        {
            // Block
        PABloco pablocoNode2;
        pablocoNode2 = (PABloco)nodeArrayList1.get(0);

        pacomandosemcasamNode1 = new AArBlocoAComandoSemCasam(pablocoNode2);
        }
	nodeList.add(pacomandosemcasamNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new44() /* reduce AChamadaComandoSemCasam */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAComandoSemCasam pacomandosemcasamNode1;
        {
            // Block
        PAChamada pachamadaNode2;
        pachamadaNode2 = (PAChamada)nodeArrayList1.get(0);

        pacomandosemcasamNode1 = new AArChamadaAComandoSemCasam(pachamadaNode2);
        }
	nodeList.add(pacomandosemcasamNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new45() /* reduce AIdVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAVar pavarNode1;
        {
            // Block
        TId tidNode2;
        tidNode2 = (TId)nodeArrayList1.get(0);

        pavarNode1 = new AArIdAVar(tidNode2);
        }
	nodeList.add(pavarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new46() /* reduce AIndexadaVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAVar pavarNode1;
        {
            // Block
        PAVar pavarNode2;
        PAExp paexpNode3;
        pavarNode2 = (PAVar)nodeArrayList1.get(0);
        paexpNode3 = (PAExp)nodeArrayList3.get(0);

        pavarNode1 = new AArIndexadaAVar(pavarNode2, paexpNode3);
        }
	nodeList.add(pavarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new47() /* reduce AOuExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAExp paexpNode1;
        {
            // Block
        PAExp paexpNode2;
        PAExp paexpNode3;
        paexpNode2 = (PAExp)nodeArrayList1.get(0);
        paexpNode3 = (PAExp)nodeArrayList3.get(0);

        paexpNode1 = new AArOuAExp(paexpNode2, paexpNode3);
        }
	nodeList.add(paexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new48() /* reduce AExp1Exp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAExp paexpNode1;
        paexpNode1 = (PAExp)nodeArrayList1.get(0);
	nodeList.add(paexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new49() /* reduce AEExp1 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAExp paexpNode1;
        {
            // Block
        PAExp paexpNode2;
        PAExp paexpNode3;
        paexpNode2 = (PAExp)nodeArrayList1.get(0);
        paexpNode3 = (PAExp)nodeArrayList3.get(0);

        paexpNode1 = new AArEAExp(paexpNode2, paexpNode3);
        }
	nodeList.add(paexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new50() /* reduce AExp1 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAExp paexpNode1;
        paexpNode1 = (PAExp)nodeArrayList1.get(0);
	nodeList.add(paexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new51() /* reduce AIgualExp2 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAExp paexpNode1;
        {
            // Block
        PAExp paexpNode2;
        PAExp paexpNode3;
        paexpNode2 = (PAExp)nodeArrayList1.get(0);
        paexpNode3 = (PAExp)nodeArrayList3.get(0);

        paexpNode1 = new AArIgualAExp(paexpNode2, paexpNode3);
        }
	nodeList.add(paexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new52() /* reduce AExp2 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAExp paexpNode1;
        paexpNode1 = (PAExp)nodeArrayList1.get(0);
	nodeList.add(paexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new53() /* reduce AMenorIgualExp3 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAExp paexpNode1;
        {
            // Block
        PAExp paexpNode2;
        PAExp paexpNode3;
        paexpNode2 = (PAExp)nodeArrayList1.get(0);
        paexpNode3 = (PAExp)nodeArrayList3.get(0);

        paexpNode1 = new AArMenorIgualAExp(paexpNode2, paexpNode3);
        }
	nodeList.add(paexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new54() /* reduce AExp3 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAExp paexpNode1;
        paexpNode1 = (PAExp)nodeArrayList1.get(0);
	nodeList.add(paexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new55() /* reduce AMaiorIgualExp4 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAExp paexpNode1;
        {
            // Block
        PAExp paexpNode2;
        PAExp paexpNode3;
        paexpNode2 = (PAExp)nodeArrayList1.get(0);
        paexpNode3 = (PAExp)nodeArrayList3.get(0);

        paexpNode1 = new AArMaiorIgualAExp(paexpNode2, paexpNode3);
        }
	nodeList.add(paexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new56() /* reduce AExp4 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAExp paexpNode1;
        paexpNode1 = (PAExp)nodeArrayList1.get(0);
	nodeList.add(paexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new57() /* reduce AMenorExp5 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAExp paexpNode1;
        {
            // Block
        PAExp paexpNode2;
        PAExp paexpNode3;
        paexpNode2 = (PAExp)nodeArrayList1.get(0);
        paexpNode3 = (PAExp)nodeArrayList3.get(0);

        paexpNode1 = new AArMenorAExp(paexpNode2, paexpNode3);
        }
	nodeList.add(paexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new58() /* reduce AExp5 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAExp paexpNode1;
        paexpNode1 = (PAExp)nodeArrayList1.get(0);
	nodeList.add(paexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new59() /* reduce AMaiorExp6 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAExp paexpNode1;
        {
            // Block
        PAExp paexpNode2;
        PAExp paexpNode3;
        paexpNode2 = (PAExp)nodeArrayList1.get(0);
        paexpNode3 = (PAExp)nodeArrayList3.get(0);

        paexpNode1 = new AArMaiorAExp(paexpNode2, paexpNode3);
        }
	nodeList.add(paexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new60() /* reduce AExp6 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAExp paexpNode1;
        paexpNode1 = (PAExp)nodeArrayList1.get(0);
	nodeList.add(paexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new61() /* reduce AMaisExp7 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAExp paexpNode1;
        {
            // Block
        PAExp paexpNode2;
        PAExp paexpNode3;
        paexpNode2 = (PAExp)nodeArrayList1.get(0);
        paexpNode3 = (PAExp)nodeArrayList3.get(0);

        paexpNode1 = new AArMaisAExp(paexpNode2, paexpNode3);
        }
	nodeList.add(paexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new62() /* reduce AExp7 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAExp paexpNode1;
        paexpNode1 = (PAExp)nodeArrayList1.get(0);
	nodeList.add(paexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new63() /* reduce AMenosExp8 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAExp paexpNode1;
        {
            // Block
        PAExp paexpNode2;
        PAExp paexpNode3;
        paexpNode2 = (PAExp)nodeArrayList1.get(0);
        paexpNode3 = (PAExp)nodeArrayList3.get(0);

        paexpNode1 = new AArMenosAExp(paexpNode2, paexpNode3);
        }
	nodeList.add(paexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new64() /* reduce AExp8 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAExp paexpNode1;
        paexpNode1 = (PAExp)nodeArrayList1.get(0);
	nodeList.add(paexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new65() /* reduce AMultExp9 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAExp paexpNode1;
        {
            // Block
        PAExp paexpNode2;
        PAExp paexpNode3;
        paexpNode2 = (PAExp)nodeArrayList1.get(0);
        paexpNode3 = (PAExp)nodeArrayList3.get(0);

        paexpNode1 = new AArMultAExp(paexpNode2, paexpNode3);
        }
	nodeList.add(paexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new66() /* reduce AExp9 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAExp paexpNode1;
        paexpNode1 = (PAExp)nodeArrayList1.get(0);
	nodeList.add(paexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new67() /* reduce ADivExp10 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAExp paexpNode1;
        {
            // Block
        PAExp paexpNode2;
        PAExp paexpNode3;
        paexpNode2 = (PAExp)nodeArrayList1.get(0);
        paexpNode3 = (PAExp)nodeArrayList3.get(0);

        paexpNode1 = new AArDivAExp(paexpNode2, paexpNode3);
        }
	nodeList.add(paexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new68() /* reduce AExp10 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAExp paexpNode1;
        paexpNode1 = (PAExp)nodeArrayList1.get(0);
	nodeList.add(paexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new69() /* reduce ANaoExp11 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAExp paexpNode1;
        paexpNode1 = (PAExp)nodeArrayList2.get(0);
	nodeList.add(paexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new70() /* reduce AExp11 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAExp paexpNode1;
        paexpNode1 = (PAExp)nodeArrayList1.get(0);
	nodeList.add(paexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new71() /* reduce AParentesesExp12 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAExp paexpNode1;
        paexpNode1 = (PAExp)nodeArrayList2.get(0);
	nodeList.add(paexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new72() /* reduce AExp12 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAExp paexpNode1;
        paexpNode1 = (PAExp)nodeArrayList1.get(0);
	nodeList.add(paexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new73() /* reduce AChamadaExp13 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAExp paexpNode1;
        {
            // Block
        PAChamada pachamadaNode2;
        pachamadaNode2 = (PAChamada)nodeArrayList1.get(0);

        paexpNode1 = new AArChamadaAExp(pachamadaNode2);
        }
	nodeList.add(paexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new74() /* reduce AVarExp13 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAExp paexpNode1;
        {
            // Block
        PAVar pavarNode2;
        pavarNode2 = (PAVar)nodeArrayList1.get(0);

        paexpNode1 = new AArVarAExp(pavarNode2);
        }
	nodeList.add(paexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new75() /* reduce ANumeroExp13 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAExp paexpNode1;
        {
            // Block
        TNumero tnumeroNode2;
        tnumeroNode2 = (TNumero)nodeArrayList1.get(0);

        paexpNode1 = new AArNumeroAExp(tnumeroNode2);
        }
	nodeList.add(paexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new76() /* reduce ACaractereExp13 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAExp paexpNode1;
        {
            // Block
        TCaractere tcaractereNode2;
        tcaractereNode2 = (TCaractere)nodeArrayList1.get(0);

        paexpNode1 = new AArCaractereAExp(tcaractereNode2);
        }
	nodeList.add(paexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new77() /* reduce ABooleanoExp13 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAExp paexpNode1;
        {
            // Block
        TBooleano tbooleanoNode2;
        tbooleanoNode2 = (TBooleano)nodeArrayList1.get(0);

        paexpNode1 = new AArBooleanoAExp(tbooleanoNode2);
        }
	nodeList.add(paexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new78() /* reduce AStringExp13 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAExp paexpNode1;
        {
            // Block
        TVetorUnidimensional tvetorunidimensionalNode2;
        tvetorunidimensionalNode2 = (TVetorUnidimensional)nodeArrayList1.get(0);

        paexpNode1 = new AArStringAExp(tvetorunidimensionalNode2);
        }
	nodeList.add(paexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new79() /* reduce AChamada */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAChamada pachamadaNode1;
        {
            // Block
        TId tidNode2;
        PAListaExp palistaexpNode3;
        tidNode2 = (TId)nodeArrayList1.get(0);
        palistaexpNode3 = (PAListaExp)nodeArrayList3.get(0);

        pachamadaNode1 = new AArChamadaAChamada(tidNode2, palistaexpNode3);
        }
	nodeList.add(pachamadaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new80() /* reduce AVazioListaExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PAListaExp palistaexpNode1;
        {
            // Block

        palistaexpNode1 = new AArListaExpVazioAListaExp();
        }
	nodeList.add(palistaexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new81() /* reduce AAlistaexplistaexp1ListaExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAListaExp palistaexpNode1;
        {
            // Block
        PAExp paexpNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        paexpNode2 = (PAExp)nodeArrayList1.get(0);
        {
            // Block
        }

        palistaexpNode1 = new AArListaExpAListaExp(paexpNode2, listNode3);
        }
	nodeList.add(palistaexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new82() /* reduce AAlistaexplistaexp2ListaExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAListaExp palistaexpNode1;
        {
            // Block
        PAExp paexpNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        paexpNode2 = (PAExp)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        palistaexpNode1 = new AArListaExpAListaExp(paexpNode2, listNode4);
        }
	nodeList.add(palistaexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new83() /* reduce APipeExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAExp paexpNode1;
        paexpNode1 = (PAExp)nodeArrayList2.get(0);
	nodeList.add(paexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new84() /* reduce ATerminal$DecVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PADecVariavel padecvariavelNode1;
        padecvariavelNode1 = (PADecVariavel)nodeArrayList1.get(0);
	if(padecvariavelNode1 != null)
	{
	  listNode2.add(padecvariavelNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new85() /* reduce ANonTerminal$DecVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PADecVariavel padecvariavelNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        padecvariavelNode2 = (PADecVariavel)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(padecvariavelNode2 != null)
	{
	  listNode3.add(padecvariavelNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new86() /* reduce ATerminal$DecFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PADecFuncao padecfuncaoNode1;
        padecfuncaoNode1 = (PADecFuncao)nodeArrayList1.get(0);
	if(padecfuncaoNode1 != null)
	{
	  listNode2.add(padecfuncaoNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new87() /* reduce ANonTerminal$DecFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PADecFuncao padecfuncaoNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        padecfuncaoNode2 = (PADecFuncao)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(padecfuncaoNode2 != null)
	{
	  listNode3.add(padecfuncaoNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new88() /* reduce ATerminal$VirgulaId */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PAVirgulaId pavirgulaidNode1;
        pavirgulaidNode1 = (PAVirgulaId)nodeArrayList1.get(0);
	if(pavirgulaidNode1 != null)
	{
	  listNode2.add(pavirgulaidNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new89() /* reduce ANonTerminal$VirgulaId */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PAVirgulaId pavirgulaidNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pavirgulaidNode2 = (PAVirgulaId)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pavirgulaidNode2 != null)
	{
	  listNode3.add(pavirgulaidNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new90() /* reduce ATerminal$ExpColchete */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PAExp paexpNode1;
        paexpNode1 = (PAExp)nodeArrayList1.get(0);
	if(paexpNode1 != null)
	{
	  listNode2.add(paexpNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new91() /* reduce ANonTerminal$ExpColchete */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PAExp paexpNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        paexpNode2 = (PAExp)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(paexpNode2 != null)
	{
	  listNode3.add(paexpNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new92() /* reduce ATerminal$PipeParametro */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PAParametro paparametroNode1;
        paparametroNode1 = (PAParametro)nodeArrayList1.get(0);
	if(paparametroNode1 != null)
	{
	  listNode2.add(paparametroNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new93() /* reduce ANonTerminal$PipeParametro */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PAParametro paparametroNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        paparametroNode2 = (PAParametro)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(paparametroNode2 != null)
	{
	  listNode3.add(paparametroNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new94() /* reduce ATerminal$Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PAComando pacomandoNode1;
        pacomandoNode1 = (PAComando)nodeArrayList1.get(0);
	if(pacomandoNode1 != null)
	{
	  listNode2.add(pacomandoNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new95() /* reduce ANonTerminal$Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PAComando pacomandoNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pacomandoNode2 = (PAComando)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pacomandoNode2 != null)
	{
	  listNode3.add(pacomandoNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new96() /* reduce ATerminal$VirgulaAtrib */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PAAtrib paatribNode1;
        paatribNode1 = (PAAtrib)nodeArrayList1.get(0);
	if(paatribNode1 != null)
	{
	  listNode2.add(paatribNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new97() /* reduce ANonTerminal$VirgulaAtrib */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PAAtrib paatribNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        paatribNode2 = (PAAtrib)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(paatribNode2 != null)
	{
	  listNode3.add(paatribNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new98() /* reduce ATerminal$PipeExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PAExp paexpNode1;
        paexpNode1 = (PAExp)nodeArrayList1.get(0);
	if(paexpNode1 != null)
	{
	  listNode2.add(paexpNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new99() /* reduce ANonTerminal$PipeExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PAExp paexpNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        paexpNode2 = (PAExp)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(paexpNode2 != null)
	{
	  listNode3.add(paexpNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, REDUCE, 0}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, {4, SHIFT, 5}, {34, SHIFT, 6}, },
			{{-1, REDUCE, 13}, },
			{{-1, REDUCE, 12}, },
			{{-1, REDUCE, 14}, },
			{{-1, ERROR, 4}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, },
			{{-1, ERROR, 5}, {40, SHIFT, 15}, },
			{{-1, ERROR, 6}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, {4, SHIFT, 16}, },
			{{-1, ERROR, 7}, {41, ACCEPT, -1}, },
			{{-1, REDUCE, 84}, },
			{{-1, ERROR, 9}, {40, SHIFT, 18}, },
			{{-1, REDUCE, 8}, },
			{{-1, REDUCE, 86}, },
			{{-1, REDUCE, 1}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, {4, SHIFT, 5}, {34, SHIFT, 6}, },
			{{-1, REDUCE, 2}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, {4, SHIFT, 5}, {34, SHIFT, 6}, },
			{{-1, ERROR, 14}, {32, SHIFT, 24}, },
			{{-1, ERROR, 15}, {35, SHIFT, 26}, },
			{{-1, ERROR, 16}, {40, SHIFT, 27}, },
			{{-1, ERROR, 17}, {40, SHIFT, 28}, },
			{{-1, REDUCE, 5}, {31, SHIFT, 29}, {35, SHIFT, 30}, },
			{{-1, ERROR, 19}, {30, SHIFT, 33}, },
			{{-1, REDUCE, 85}, },
			{{-1, REDUCE, 3}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, {4, SHIFT, 5}, {34, SHIFT, 6}, },
			{{-1, ERROR, 22}, {40, SHIFT, 34}, },
			{{-1, REDUCE, 87}, },
			{{-1, ERROR, 24}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, REDUCE, 9}, {32, SHIFT, 24}, },
			{{-1, REDUCE, 19}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, },
			{{-1, ERROR, 27}, {35, SHIFT, 63}, },
			{{-1, ERROR, 28}, {35, SHIFT, 64}, },
			{{-1, ERROR, 29}, {40, SHIFT, 65}, },
			{{-1, REDUCE, 19}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, },
			{{-1, REDUCE, 88}, },
			{{-1, REDUCE, 6}, {31, SHIFT, 29}, },
			{{-1, REDUCE, 4}, },
			{{-1, ERROR, 34}, {35, SHIFT, 30}, },
			{{-1, REDUCE, 76}, },
			{{-1, REDUCE, 77}, },
			{{-1, REDUCE, 75}, },
			{{-1, REDUCE, 78}, },
			{{-1, ERROR, 39}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, ERROR, 40}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, REDUCE, 45}, {35, SHIFT, 70}, },
			{{-1, REDUCE, 74}, {32, SHIFT, 71}, },
			{{-1, ERROR, 43}, {28, SHIFT, 72}, {33, SHIFT, 73}, },
			{{-1, REDUCE, 48}, {27, SHIFT, 74}, },
			{{-1, REDUCE, 50}, {25, SHIFT, 75}, },
			{{-1, REDUCE, 52}, {24, SHIFT, 76}, },
			{{-1, REDUCE, 54}, {23, SHIFT, 77}, },
			{{-1, REDUCE, 56}, {22, SHIFT, 78}, },
			{{-1, REDUCE, 58}, {21, SHIFT, 79}, },
			{{-1, REDUCE, 60}, {17, SHIFT, 80}, },
			{{-1, REDUCE, 62}, {18, SHIFT, 81}, },
			{{-1, REDUCE, 64}, {19, SHIFT, 82}, },
			{{-1, REDUCE, 66}, {20, SHIFT, 83}, },
			{{-1, REDUCE, 68}, },
			{{-1, REDUCE, 70}, },
			{{-1, REDUCE, 72}, },
			{{-1, REDUCE, 73}, },
			{{-1, REDUCE, 90}, },
			{{-1, REDUCE, 10}, {32, SHIFT, 24}, },
			{{-1, ERROR, 60}, {40, SHIFT, 85}, },
			{{-1, ERROR, 61}, {36, SHIFT, 86}, },
			{{-1, REDUCE, 20}, {37, SHIFT, 87}, },
			{{-1, REDUCE, 19}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, },
			{{-1, REDUCE, 19}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, },
			{{-1, REDUCE, 7}, },
			{{-1, ERROR, 66}, {36, SHIFT, 92}, },
			{{-1, REDUCE, 89}, },
			{{-1, REDUCE, 69}, },
			{{-1, ERROR, 69}, {28, SHIFT, 72}, {36, SHIFT, 93}, },
			{{-1, REDUCE, 80}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, ERROR, 71}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, ERROR, 72}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, REDUCE, 11}, },
			{{-1, ERROR, 74}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, ERROR, 75}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, ERROR, 76}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, ERROR, 77}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, ERROR, 78}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, ERROR, 79}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, ERROR, 80}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, ERROR, 81}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, ERROR, 82}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, ERROR, 83}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, REDUCE, 91}, },
			{{-1, REDUCE, 23}, },
			{{-1, ERROR, 86}, {9, SHIFT, 108}, },
			{{-1, ERROR, 87}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, },
			{{-1, REDUCE, 92}, },
			{{-1, REDUCE, 21}, {37, SHIFT, 87}, },
			{{-1, ERROR, 90}, {36, SHIFT, 112}, },
			{{-1, ERROR, 91}, {36, SHIFT, 113}, },
			{{-1, ERROR, 92}, {9, SHIFT, 108}, },
			{{-1, REDUCE, 71}, },
			{{-1, REDUCE, 81}, {28, SHIFT, 72}, {37, SHIFT, 115}, },
			{{-1, ERROR, 95}, {36, SHIFT, 118}, },
			{{-1, ERROR, 96}, {28, SHIFT, 72}, {33, SHIFT, 119}, },
			{{-1, REDUCE, 47}, {27, SHIFT, 74}, },
			{{-1, REDUCE, 49}, {25, SHIFT, 75}, },
			{{-1, REDUCE, 51}, {24, SHIFT, 76}, },
			{{-1, REDUCE, 53}, {23, SHIFT, 77}, },
			{{-1, REDUCE, 55}, {22, SHIFT, 78}, },
			{{-1, REDUCE, 57}, {21, SHIFT, 79}, },
			{{-1, REDUCE, 59}, {17, SHIFT, 80}, },
			{{-1, REDUCE, 61}, {18, SHIFT, 81}, },
			{{-1, REDUCE, 63}, {19, SHIFT, 82}, },
			{{-1, REDUCE, 65}, {20, SHIFT, 83}, },
			{{-1, REDUCE, 67}, },
			{{-1, ERROR, 108}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, {9, SHIFT, 108}, {10, SHIFT, 120}, {11, SHIFT, 121}, {12, SHIFT, 122}, {13, SHIFT, 123}, {14, SHIFT, 124}, {16, SHIFT, 125}, {40, SHIFT, 41}, },
			{{-1, REDUCE, 16}, },
			{{-1, REDUCE, 22}, },
			{{-1, REDUCE, 93}, },
			{{-1, ERROR, 112}, {9, SHIFT, 108}, },
			{{-1, ERROR, 113}, {9, SHIFT, 108}, },
			{{-1, REDUCE, 15}, },
			{{-1, ERROR, 115}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, REDUCE, 98}, },
			{{-1, REDUCE, 82}, {37, SHIFT, 115}, },
			{{-1, REDUCE, 79}, },
			{{-1, REDUCE, 46}, },
			{{-1, REDUCE, 24}, },
			{{-1, ERROR, 121}, {35, SHIFT, 140}, },
			{{-1, ERROR, 122}, {35, SHIFT, 141}, },
			{{-1, ERROR, 123}, {35, SHIFT, 142}, },
			{{-1, ERROR, 124}, {35, SHIFT, 143}, },
			{{-1, ERROR, 125}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {30, SHIFT, 144}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, ERROR, 126}, {40, SHIFT, 146}, },
			{{-1, REDUCE, 43}, },
			{{-1, ERROR, 128}, {30, SHIFT, 147}, },
			{{-1, REDUCE, 94}, },
			{{-1, REDUCE, 32}, },
			{{-1, REDUCE, 33}, },
			{{-1, ERROR, 132}, {29, SHIFT, 148}, {32, SHIFT, 71}, },
			{{-1, ERROR, 133}, {30, SHIFT, 149}, },
			{{-1, ERROR, 134}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, {9, SHIFT, 108}, {10, SHIFT, 150}, {11, SHIFT, 121}, {12, SHIFT, 122}, {13, SHIFT, 123}, {14, SHIFT, 124}, {16, SHIFT, 125}, {40, SHIFT, 41}, },
			{{-1, ERROR, 135}, {9, SHIFT, 108}, {10, SHIFT, 152}, {11, SHIFT, 121}, {12, SHIFT, 122}, {13, SHIFT, 123}, {14, SHIFT, 124}, {16, SHIFT, 125}, {40, SHIFT, 41}, },
			{{-1, REDUCE, 18}, },
			{{-1, REDUCE, 17}, },
			{{-1, REDUCE, 83}, {28, SHIFT, 72}, },
			{{-1, REDUCE, 99}, },
			{{-1, ERROR, 140}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, ERROR, 141}, {40, SHIFT, 155}, },
			{{-1, ERROR, 142}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, },
			{{-1, ERROR, 143}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, REDUCE, 41}, },
			{{-1, ERROR, 145}, {28, SHIFT, 72}, {30, SHIFT, 160}, },
			{{-1, REDUCE, 5}, {31, SHIFT, 29}, },
			{{-1, REDUCE, 40}, },
			{{-1, ERROR, 148}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, REDUCE, 44}, },
			{{-1, REDUCE, 25}, },
			{{-1, ERROR, 151}, {9, SHIFT, 108}, {10, SHIFT, 162}, {11, SHIFT, 121}, {12, SHIFT, 122}, {13, SHIFT, 123}, {14, SHIFT, 124}, {16, SHIFT, 125}, {40, SHIFT, 41}, },
			{{-1, REDUCE, 26}, },
			{{-1, REDUCE, 95}, },
			{{-1, ERROR, 154}, {28, SHIFT, 72}, {36, SHIFT, 163}, },
			{{-1, REDUCE, 45}, },
			{{-1, REDUCE, 29}, {31, SHIFT, 164}, },
			{{-1, ERROR, 157}, {38, SHIFT, 167}, },
			{{-1, ERROR, 158}, {40, SHIFT, 168}, },
			{{-1, ERROR, 159}, {28, SHIFT, 72}, {36, SHIFT, 169}, },
			{{-1, REDUCE, 42}, },
			{{-1, REDUCE, 28}, {28, SHIFT, 72}, },
			{{-1, REDUCE, 27}, },
			{{-1, ERROR, 163}, {9, SHIFT, 108}, {11, SHIFT, 121}, {12, SHIFT, 122}, {13, SHIFT, 123}, {14, SHIFT, 124}, {16, SHIFT, 125}, {40, SHIFT, 41}, },
			{{-1, ERROR, 164}, {40, SHIFT, 155}, },
			{{-1, REDUCE, 96}, },
			{{-1, REDUCE, 30}, {31, SHIFT, 164}, },
			{{-1, ERROR, 167}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, ERROR, 168}, {39, SHIFT, 174}, },
			{{-1, ERROR, 169}, {9, SHIFT, 108}, {11, SHIFT, 121}, {12, SHIFT, 122}, {13, SHIFT, 123}, {14, SHIFT, 124}, {16, SHIFT, 125}, {40, SHIFT, 41}, },
			{{-1, REDUCE, 36}, },
			{{-1, REDUCE, 31}, },
			{{-1, REDUCE, 97}, },
			{{-1, ERROR, 173}, {28, SHIFT, 72}, {38, SHIFT, 177}, },
			{{-1, ERROR, 174}, {40, SHIFT, 178}, },
			{{-1, REDUCE, 34}, },
			{{-1, REDUCE, 33}, {15, SHIFT, 179}, },
			{{-1, ERROR, 177}, {40, SHIFT, 155}, },
			{{-1, ERROR, 178}, {36, SHIFT, 181}, },
			{{-1, ERROR, 179}, {9, SHIFT, 108}, {11, SHIFT, 121}, {12, SHIFT, 122}, {13, SHIFT, 123}, {14, SHIFT, 124}, {16, SHIFT, 125}, {40, SHIFT, 41}, },
			{{-1, ERROR, 180}, {36, SHIFT, 184}, },
			{{-1, ERROR, 181}, {9, SHIFT, 108}, {11, SHIFT, 121}, {12, SHIFT, 122}, {13, SHIFT, 123}, {14, SHIFT, 124}, {16, SHIFT, 125}, {40, SHIFT, 41}, },
			{{-1, REDUCE, 35}, },
			{{-1, REDUCE, 39}, },
			{{-1, ERROR, 184}, {9, SHIFT, 108}, {11, SHIFT, 121}, {12, SHIFT, 122}, {13, SHIFT, 123}, {14, SHIFT, 124}, {16, SHIFT, 125}, {40, SHIFT, 41}, },
			{{-1, REDUCE, 38}, },
			{{-1, REDUCE, 37}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 7}, },
			{{-1, 8}, {12, 20}, {134, 20}, },
			{{-1, 19}, },
			{{-1, 31}, {32, 67}, },
			{{-1, 60}, {0, 9}, {6, 17}, {12, 9}, {13, 22}, {21, 22}, {108, 126}, {134, 126}, {142, 158}, },
			{{-1, 25}, {25, 58}, {59, 84}, },
			{{-1, 10}, {4, 14}, },
			{{-1, 11}, {13, 23}, {21, 23}, },
			{{-1, 61}, {30, 66}, {63, 90}, {64, 91}, },
			{{-1, 88}, {89, 111}, },
			{{-1, 62}, {87, 110}, },
			{{-1, 127}, {86, 109}, {92, 114}, {112, 136}, {113, 137}, },
			{{-1, 128}, {141, 156}, {164, 171}, {177, 156}, },
			{{-1, 157}, {177, 180}, },
			{{-1, 165}, {166, 172}, },
			{{-1, 129}, {135, 153}, {151, 153}, {163, 170}, {169, 175}, {181, 185}, {184, 186}, },
			{{-1, 130}, {179, 182}, },
			{{-1, 131}, {169, 176}, {179, 183}, },
			{{-1, 42}, {108, 132}, {134, 132}, {135, 132}, {141, 132}, {151, 132}, {163, 132}, {164, 132}, {169, 132}, {177, 132}, {179, 132}, {181, 132}, {184, 132}, },
			{{-1, 43}, {40, 69}, {70, 94}, {71, 96}, {115, 138}, {125, 145}, {140, 154}, {143, 159}, {148, 161}, {167, 173}, },
			{{-1, 44}, {72, 97}, },
			{{-1, 45}, {74, 98}, },
			{{-1, 46}, {75, 99}, },
			{{-1, 47}, {76, 100}, },
			{{-1, 48}, {77, 101}, },
			{{-1, 49}, {78, 102}, },
			{{-1, 50}, {79, 103}, },
			{{-1, 51}, {80, 104}, },
			{{-1, 52}, {81, 105}, },
			{{-1, 53}, {82, 106}, },
			{{-1, 54}, {83, 107}, },
			{{-1, 55}, {39, 68}, },
			{{-1, 56}, },
			{{-1, 57}, {108, 133}, {134, 133}, {135, 133}, {151, 133}, {163, 133}, {169, 133}, {179, 133}, {181, 133}, {184, 133}, },
			{{-1, 95}, },
			{{-1, 116}, {117, 139}, },
			{{-1, 12}, {108, 134}, },
			{{-1, 13}, {12, 21}, },
			{{-1, 32}, },
			{{-1, 59}, },
			{{-1, 89}, },
			{{-1, 135}, {134, 151}, },
			{{-1, 166}, },
			{{-1, 117}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'caractere', 'numero', 'booleano', 'vetor', 'vazio', '->', EOF",
			"expecting: '[', id",
			"expecting: 'caractere', 'numero', 'booleano'",
			"expecting: id",
			"expecting: 'caractere', 'numero', 'booleano', 'vetor', 'vazio'",
			"expecting: EOF",
			"expecting: 'caractere', 'numero', 'booleano', 'vetor', 'vazio', 'inicio', 'fim', 'enquanto', 'para', 'para cada', 'se', 'retorne', '->', id, EOF",
			"expecting: '['",
			"expecting: '('",
			"expecting: '.', ',', '('",
			"expecting: '.'",
			"expecting: caractere, booleano, numero, vetor unidimensional, 'nao', '(', id",
			"expecting: 'caractere', 'numero', 'booleano', 'vetor', ')'",
			"expecting: '.', ','",
			"expecting: '+', '-', '*', '/', '>', '<', '>=', '<=', '=', 'e', 'ou', '.', ',', ']', ')', '|', ';'",
			"expecting: caractere, booleano, numero, vetor unidimensional, '(', id",
			"expecting: '+', '-', '*', '/', '>', '<', '>=', '<=', '=', 'e', 'ou', ':=', '.', ',', '[', ']', '(', ')', '|', ';'",
			"expecting: '+', '-', '*', '/', '>', '<', '>=', '<=', '=', 'e', 'ou', '.', ',', '[', ']', ')', '|', ';'",
			"expecting: 'ou', ']'",
			"expecting: 'e', 'ou', '.', ',', ']', ')', '|', ';'",
			"expecting: '=', 'e', 'ou', '.', ',', ']', ')', '|', ';'",
			"expecting: '<=', '=', 'e', 'ou', '.', ',', ']', ')', '|', ';'",
			"expecting: '>=', '<=', '=', 'e', 'ou', '.', ',', ']', ')', '|', ';'",
			"expecting: '<', '>=', '<=', '=', 'e', 'ou', '.', ',', ']', ')', '|', ';'",
			"expecting: '>', '<', '>=', '<=', '=', 'e', 'ou', '.', ',', ']', ')', '|', ';'",
			"expecting: '+', '>', '<', '>=', '<=', '=', 'e', 'ou', '.', ',', ']', ')', '|', ';'",
			"expecting: '+', '-', '>', '<', '>=', '<=', '=', 'e', 'ou', '.', ',', ']', ')', '|', ';'",
			"expecting: '+', '-', '*', '>', '<', '>=', '<=', '=', 'e', 'ou', '.', ',', ']', ')', '|', ';'",
			"expecting: ')'",
			"expecting: ')', '|'",
			"expecting: 'ou', ')'",
			"expecting: caractere, booleano, numero, vetor unidimensional, 'nao', '(', ')', id",
			"expecting: 'inicio'",
			"expecting: 'caractere', 'numero', 'booleano', 'vetor'",
			"expecting: 'ou', ')', '|'",
			"expecting: 'caractere', 'numero', 'booleano', 'vetor', 'inicio', 'fim', 'enquanto', 'para', 'para cada', 'se', 'retorne', id",
			"expecting: '+', '-', '*', '/', '>', '<', '>=', '<=', '=', 'e', 'ou', ':=', '.', ',', '[', ']', ')', '|', ';'",
			"expecting: 'caractere', 'numero', 'booleano', 'vetor', 'vazio', 'inicio', 'fim', 'enquanto', 'para', 'para cada', 'se', 'senao', 'retorne', '->', id, EOF",
			"expecting: caractere, booleano, numero, vetor unidimensional, 'nao', '.', '(', id",
			"expecting: 'inicio', 'fim', 'enquanto', 'para', 'para cada', 'se', 'senao', 'retorne', id",
			"expecting: 'inicio', 'fim', 'enquanto', 'para', 'para cada', 'se', 'retorne', id",
			"expecting: ':=', '['",
			"expecting: 'ou', '.'",
			"expecting: ',', ')', ';'",
			"expecting: ';'",
			"expecting: 'ou', '.', ',', ')', ';'",
			"expecting: 'inicio', 'enquanto', 'para', 'para cada', 'se', 'retorne', id",
			"expecting: ':'",
			"expecting: 'ou', ';'",
        };*/
    private static int[] errors;
/*      {
			0, 1, 1, 1, 2, 3, 4, 5, 6, 3, 3, 0, 0, 0, 7, 8, 3, 3, 9, 10, 6, 0, 3, 0, 11, 1, 12, 8, 8, 3, 12, 13, 13, 6, 8, 14, 14, 14, 14, 15, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 14, 14, 14, 14, 14, 1, 1, 3, 28, 29, 12, 12, 13, 28, 13, 14, 30, 31, 11, 11, 1, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 1, 29, 32, 33, 29, 29, 28, 28, 32, 14, 34, 28, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 14, 14, 35, 0, 29, 29, 32, 32, 0, 11, 29, 29, 14, 36, 37, 8, 8, 8, 8, 38, 3, 39, 10, 40, 40, 40, 41, 10, 35, 40, 0, 0, 34, 29, 11, 3, 33, 11, 39, 42, 13, 39, 11, 39, 37, 40, 37, 40, 30, 41, 43, 44, 3, 30, 39, 45, 37, 46, 3, 43, 43, 11, 47, 46, 40, 43, 43, 48, 3, 40, 39, 3, 28, 46, 28, 46, 40, 39, 46, 40, 40, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
