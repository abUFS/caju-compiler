/* This file was generated by SableCC (http://www.sablecc.org/). */

package caju.parser;

import caju.lexer.*;
import caju.node.*;
import caju.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList<Object> nodeList;

    private final Lexer lexer;
    private final ListIterator<Object> stack = new LinkedList<Object>().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    @SuppressWarnings({"unchecked","unused"})
    private void push(int numstate, ArrayList<Object> listNode) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            // int middle = (low + high) / 2;
            int middle = (low + high) >>> 1;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList<Object> pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList<Object> list = new ArrayList<Object>();
		        list.add(this.lexer.next());
                        push(this.action[1], list);
                    }
		    break;
                case REDUCE:
                    {
                        int reduction = this.action[1];
                        if(reduction < 500) reduce_0(reduction);
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PPrograma node1 = (PPrograma) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }

    private void reduce_0(int reduction) throws IOException, LexerException, ParserException
    {
        switch(reduction)
        {
            case 0: /* reduce AAprograma1Programa */
            {
                ArrayList<Object> list = new0();
                push(goTo(0), list);
            }
            break;
            case 1: /* reduce AAprograma2Programa */
            {
                ArrayList<Object> list = new1();
                push(goTo(0), list);
            }
            break;
            case 2: /* reduce AAprograma3Programa */
            {
                ArrayList<Object> list = new2();
                push(goTo(0), list);
            }
            break;
            case 3: /* reduce AAprograma4Programa */
            {
                ArrayList<Object> list = new3();
                push(goTo(0), list);
            }
            break;
            case 4: /* reduce ADecVariavel */
            {
                ArrayList<Object> list = new4();
                push(goTo(1), list);
            }
            break;
            case 5: /* reduce AAlistanomes1ListaNomes */
            {
                ArrayList<Object> list = new5();
                push(goTo(2), list);
            }
            break;
            case 6: /* reduce AAlistanomes2ListaNomes */
            {
                ArrayList<Object> list = new6();
                push(goTo(2), list);
            }
            break;
            case 7: /* reduce AVirgulaId */
            {
                ArrayList<Object> list = new7();
                push(goTo(3), list);
            }
            break;
            case 8: /* reduce ABaseTipo */
            {
                ArrayList<Object> list = new8();
                push(goTo(4), list);
            }
            break;
            case 9: /* reduce AAvetortipo1Tipo */
            {
                ArrayList<Object> list = new9();
                push(goTo(4), list);
            }
            break;
            case 10: /* reduce AAvetortipo2Tipo */
            {
                ArrayList<Object> list = new10();
                push(goTo(4), list);
            }
            break;
            case 11: /* reduce AExpColchete */
            {
                ArrayList<Object> list = new11();
                push(goTo(5), list);
            }
            break;
            case 12: /* reduce ANumeroTipoBase */
            {
                ArrayList<Object> list = new12();
                push(goTo(6), list);
            }
            break;
            case 13: /* reduce ACaractereTipoBase */
            {
                ArrayList<Object> list = new13();
                push(goTo(6), list);
            }
            break;
            case 14: /* reduce ABooleanoTipoBase */
            {
                ArrayList<Object> list = new14();
                push(goTo(6), list);
            }
            break;
            case 15: /* reduce AAdecfuncao1$Tipo1DecFuncao */
            {
                ArrayList<Object> list = new15();
                push(goTo(7), list);
            }
            break;
            case 16: /* reduce AAdecfuncao1$Vazio1DecFuncao */
            {
                ArrayList<Object> list = new16();
                push(goTo(7), list);
            }
            break;
            case 17: /* reduce AAdecfuncao2$Tipo1DecFuncao */
            {
                ArrayList<Object> list = new17();
                push(goTo(7), list);
            }
            break;
            case 18: /* reduce AAdecfuncao2$Vazio1DecFuncao */
            {
                ArrayList<Object> list = new18();
                push(goTo(7), list);
            }
            break;
            case 19: /* reduce AVazioParametros */
            {
                ArrayList<Object> list = new19();
                push(goTo(8), list);
            }
            break;
            case 20: /* reduce AAparametroparametros1Parametros */
            {
                ArrayList<Object> list = new20();
                push(goTo(8), list);
            }
            break;
            case 21: /* reduce AAparametroparametros2Parametros */
            {
                ArrayList<Object> list = new21();
                push(goTo(8), list);
            }
            break;
            case 22: /* reduce APipeParametro */
            {
                ArrayList<Object> list = new22();
                push(goTo(9), list);
            }
            break;
            case 23: /* reduce AParametro */
            {
                ArrayList<Object> list = new23();
                push(goTo(10), list);
            }
            break;
            case 24: /* reduce AAbloco1Bloco */
            {
                ArrayList<Object> list = new24();
                push(goTo(11), list);
            }
            break;
            case 25: /* reduce AAbloco2Bloco */
            {
                ArrayList<Object> list = new25();
                push(goTo(11), list);
            }
            break;
            case 26: /* reduce AAbloco3Bloco */
            {
                ArrayList<Object> list = new26();
                push(goTo(11), list);
            }
            break;
            case 27: /* reduce AAbloco4Bloco */
            {
                ArrayList<Object> list = new27();
                push(goTo(11), list);
            }
            break;
            case 28: /* reduce AAtrib */
            {
                ArrayList<Object> list = new28();
                push(goTo(12), list);
            }
            break;
            case 29: /* reduce AAlistaatrib1ListaAtrib */
            {
                ArrayList<Object> list = new29();
                push(goTo(13), list);
            }
            break;
            case 30: /* reduce AAlistaatrib2ListaAtrib */
            {
                ArrayList<Object> list = new30();
                push(goTo(13), list);
            }
            break;
            case 31: /* reduce AVirgulaAtrib */
            {
                ArrayList<Object> list = new31();
                push(goTo(14), list);
            }
            break;
            case 32: /* reduce ACasamComando */
            {
                ArrayList<Object> list = new32();
                push(goTo(15), list);
            }
            break;
            case 33: /* reduce ASemCasamComando */
            {
                ArrayList<Object> list = new33();
                push(goTo(15), list);
            }
            break;
            case 34: /* reduce ASeComandoCasam */
            {
                ArrayList<Object> list = new34();
                push(goTo(16), list);
            }
            break;
            case 35: /* reduce ASenaoComandoCasam */
            {
                ArrayList<Object> list = new35();
                push(goTo(16), list);
            }
            break;
            case 36: /* reduce AEnquantoComandoCasam */
            {
                ArrayList<Object> list = new36();
                push(goTo(16), list);
            }
            break;
            case 37: /* reduce AParaComandoCasam */
            {
                ArrayList<Object> list = new37();
                push(goTo(16), list);
            }
            break;
            case 38: /* reduce AParaCadaComandoCasam */
            {
                ArrayList<Object> list = new38();
                push(goTo(16), list);
            }
            break;
            case 39: /* reduce ASeSenaoComandoSemCasam */
            {
                ArrayList<Object> list = new39();
                push(goTo(17), list);
            }
            break;
            case 40: /* reduce AAtribComandoSemCasam */
            {
                ArrayList<Object> list = new40();
                push(goTo(17), list);
            }
            break;
            case 41: /* reduce AAretornecomandosemcasam1ComandoSemCasam */
            {
                ArrayList<Object> list = new41();
                push(goTo(17), list);
            }
            break;
            case 42: /* reduce AAretornecomandosemcasam2ComandoSemCasam */
            {
                ArrayList<Object> list = new42();
                push(goTo(17), list);
            }
            break;
            case 43: /* reduce ABlocoComandoSemCasam */
            {
                ArrayList<Object> list = new43();
                push(goTo(17), list);
            }
            break;
            case 44: /* reduce AChamadaComandoSemCasam */
            {
                ArrayList<Object> list = new44();
                push(goTo(17), list);
            }
            break;
            case 45: /* reduce AIdVar */
            {
                ArrayList<Object> list = new45();
                push(goTo(18), list);
            }
            break;
            case 46: /* reduce AIndexadaVar */
            {
                ArrayList<Object> list = new46();
                push(goTo(18), list);
            }
            break;
            case 47: /* reduce AOuExp */
            {
                ArrayList<Object> list = new47();
                push(goTo(19), list);
            }
            break;
            case 48: /* reduce AExp1Exp */
            {
                ArrayList<Object> list = new48();
                push(goTo(19), list);
            }
            break;
            case 49: /* reduce AEExp1 */
            {
                ArrayList<Object> list = new49();
                push(goTo(20), list);
            }
            break;
            case 50: /* reduce AExp1 */
            {
                ArrayList<Object> list = new50();
                push(goTo(20), list);
            }
            break;
            case 51: /* reduce AIgualExp2 */
            {
                ArrayList<Object> list = new51();
                push(goTo(21), list);
            }
            break;
            case 52: /* reduce AExp2 */
            {
                ArrayList<Object> list = new52();
                push(goTo(21), list);
            }
            break;
            case 53: /* reduce AMenorIgualExp3 */
            {
                ArrayList<Object> list = new53();
                push(goTo(22), list);
            }
            break;
            case 54: /* reduce AExp3 */
            {
                ArrayList<Object> list = new54();
                push(goTo(22), list);
            }
            break;
            case 55: /* reduce AMaiorIgualExp4 */
            {
                ArrayList<Object> list = new55();
                push(goTo(23), list);
            }
            break;
            case 56: /* reduce AExp4 */
            {
                ArrayList<Object> list = new56();
                push(goTo(23), list);
            }
            break;
            case 57: /* reduce AMenorExp5 */
            {
                ArrayList<Object> list = new57();
                push(goTo(24), list);
            }
            break;
            case 58: /* reduce AExp5 */
            {
                ArrayList<Object> list = new58();
                push(goTo(24), list);
            }
            break;
            case 59: /* reduce AMaiorExp6 */
            {
                ArrayList<Object> list = new59();
                push(goTo(25), list);
            }
            break;
            case 60: /* reduce AExp6 */
            {
                ArrayList<Object> list = new60();
                push(goTo(25), list);
            }
            break;
            case 61: /* reduce AMaisExp7 */
            {
                ArrayList<Object> list = new61();
                push(goTo(26), list);
            }
            break;
            case 62: /* reduce AExp7 */
            {
                ArrayList<Object> list = new62();
                push(goTo(26), list);
            }
            break;
            case 63: /* reduce AMenosExp8 */
            {
                ArrayList<Object> list = new63();
                push(goTo(27), list);
            }
            break;
            case 64: /* reduce AExp8 */
            {
                ArrayList<Object> list = new64();
                push(goTo(27), list);
            }
            break;
            case 65: /* reduce AMultExp9 */
            {
                ArrayList<Object> list = new65();
                push(goTo(28), list);
            }
            break;
            case 66: /* reduce AExp9 */
            {
                ArrayList<Object> list = new66();
                push(goTo(28), list);
            }
            break;
            case 67: /* reduce ADivExp10 */
            {
                ArrayList<Object> list = new67();
                push(goTo(29), list);
            }
            break;
            case 68: /* reduce AExp10 */
            {
                ArrayList<Object> list = new68();
                push(goTo(29), list);
            }
            break;
            case 69: /* reduce ANaoExp11 */
            {
                ArrayList<Object> list = new69();
                push(goTo(30), list);
            }
            break;
            case 70: /* reduce AExp11 */
            {
                ArrayList<Object> list = new70();
                push(goTo(30), list);
            }
            break;
            case 71: /* reduce AParentesesExp12 */
            {
                ArrayList<Object> list = new71();
                push(goTo(31), list);
            }
            break;
            case 72: /* reduce AExp12 */
            {
                ArrayList<Object> list = new72();
                push(goTo(31), list);
            }
            break;
            case 73: /* reduce AChamadaExp13 */
            {
                ArrayList<Object> list = new73();
                push(goTo(32), list);
            }
            break;
            case 74: /* reduce AVarExp13 */
            {
                ArrayList<Object> list = new74();
                push(goTo(32), list);
            }
            break;
            case 75: /* reduce ANumeroExp13 */
            {
                ArrayList<Object> list = new75();
                push(goTo(32), list);
            }
            break;
            case 76: /* reduce ACaractereExp13 */
            {
                ArrayList<Object> list = new76();
                push(goTo(32), list);
            }
            break;
            case 77: /* reduce ABooleanoExp13 */
            {
                ArrayList<Object> list = new77();
                push(goTo(32), list);
            }
            break;
            case 78: /* reduce AStringExp13 */
            {
                ArrayList<Object> list = new78();
                push(goTo(32), list);
            }
            break;
            case 79: /* reduce AChamada */
            {
                ArrayList<Object> list = new79();
                push(goTo(33), list);
            }
            break;
            case 80: /* reduce AVazioListaExp */
            {
                ArrayList<Object> list = new80();
                push(goTo(34), list);
            }
            break;
            case 81: /* reduce AAlistaexplistaexp1ListaExp */
            {
                ArrayList<Object> list = new81();
                push(goTo(34), list);
            }
            break;
            case 82: /* reduce AAlistaexplistaexp2ListaExp */
            {
                ArrayList<Object> list = new82();
                push(goTo(34), list);
            }
            break;
            case 83: /* reduce APipeExp */
            {
                ArrayList<Object> list = new83();
                push(goTo(35), list);
            }
            break;
            case 84: /* reduce ATerminal$DecVariavel */
            {
                ArrayList<Object> list = new84();
                push(goTo(36), list);
            }
            break;
            case 85: /* reduce ANonTerminal$DecVariavel */
            {
                ArrayList<Object> list = new85();
                push(goTo(36), list);
            }
            break;
            case 86: /* reduce ATerminal$DecFuncao */
            {
                ArrayList<Object> list = new86();
                push(goTo(37), list);
            }
            break;
            case 87: /* reduce ANonTerminal$DecFuncao */
            {
                ArrayList<Object> list = new87();
                push(goTo(37), list);
            }
            break;
            case 88: /* reduce ATerminal$VirgulaId */
            {
                ArrayList<Object> list = new88();
                push(goTo(38), list);
            }
            break;
            case 89: /* reduce ANonTerminal$VirgulaId */
            {
                ArrayList<Object> list = new89();
                push(goTo(38), list);
            }
            break;
            case 90: /* reduce ATerminal$ExpColchete */
            {
                ArrayList<Object> list = new90();
                push(goTo(39), list);
            }
            break;
            case 91: /* reduce ANonTerminal$ExpColchete */
            {
                ArrayList<Object> list = new91();
                push(goTo(39), list);
            }
            break;
            case 92: /* reduce ATerminal$PipeParametro */
            {
                ArrayList<Object> list = new92();
                push(goTo(40), list);
            }
            break;
            case 93: /* reduce ANonTerminal$PipeParametro */
            {
                ArrayList<Object> list = new93();
                push(goTo(40), list);
            }
            break;
            case 94: /* reduce ATerminal$Comando */
            {
                ArrayList<Object> list = new94();
                push(goTo(41), list);
            }
            break;
            case 95: /* reduce ANonTerminal$Comando */
            {
                ArrayList<Object> list = new95();
                push(goTo(41), list);
            }
            break;
            case 96: /* reduce ATerminal$VirgulaAtrib */
            {
                ArrayList<Object> list = new96();
                push(goTo(42), list);
            }
            break;
            case 97: /* reduce ANonTerminal$VirgulaAtrib */
            {
                ArrayList<Object> list = new97();
                push(goTo(42), list);
            }
            break;
            case 98: /* reduce ATerminal$PipeExp */
            {
                ArrayList<Object> list = new98();
                push(goTo(43), list);
            }
            break;
            case 99: /* reduce ANonTerminal$PipeExp */
            {
                ArrayList<Object> list = new99();
                push(goTo(43), list);
            }
            break;
        }
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new0() /* reduce AAprograma1Programa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PPrograma pprogramaNode1;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        }
        {
            // Block
        }

        pprogramaNode1 = new APrograma(listNode2, listNode3);
        }
	nodeList.add(pprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new1() /* reduce AAprograma2Programa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrograma pprogramaNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        }

        pprogramaNode1 = new APrograma(listNode3, listNode4);
        }
	nodeList.add(pprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new2() /* reduce AAprograma3Programa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrograma pprogramaNode1;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        {
            // Block
        }
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList1.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pprogramaNode1 = new APrograma(listNode2, listNode4);
        }
	nodeList.add(pprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new3() /* reduce AAprograma4Programa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrograma pprogramaNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        listNode4 = (LinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        pprogramaNode1 = new APrograma(listNode3, listNode5);
        }
	nodeList.add(pprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new4() /* reduce ADecVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecVariavel pdecvariavelNode1;
        {
            // Block
        PTipo ptipoNode2;
        PListaNomes plistanomesNode3;
        TPontoFinal tpontofinalNode4;
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);
        plistanomesNode3 = (PListaNomes)nodeArrayList2.get(0);
        tpontofinalNode4 = (TPontoFinal)nodeArrayList3.get(0);

        pdecvariavelNode1 = new ADecVariavel(ptipoNode2, plistanomesNode3, tpontofinalNode4);
        }
	nodeList.add(pdecvariavelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new5() /* reduce AAlistanomes1ListaNomes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaNomes plistanomesNode1;
        {
            // Block
        TId tidNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        tidNode2 = (TId)nodeArrayList1.get(0);
        {
            // Block
        }

        plistanomesNode1 = new AListaNomes(tidNode2, listNode3);
        }
	nodeList.add(plistanomesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new6() /* reduce AAlistanomes2ListaNomes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaNomes plistanomesNode1;
        {
            // Block
        TId tidNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        tidNode2 = (TId)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        plistanomesNode1 = new AListaNomes(tidNode2, listNode4);
        }
	nodeList.add(plistanomesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new7() /* reduce AVirgulaId */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVirgulaId pvirgulaidNode1;
        {
            // Block
        TVirgula tvirgulaNode2;
        TId tidNode3;
        tvirgulaNode2 = (TVirgula)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);

        pvirgulaidNode1 = new AVirgulaId(tvirgulaNode2, tidNode3);
        }
	nodeList.add(pvirgulaidNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new8() /* reduce ABaseTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        PTipoBase ptipobaseNode2;
        ptipobaseNode2 = (PTipoBase)nodeArrayList1.get(0);

        ptipoNode1 = new ABaseTipo(ptipobaseNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new9() /* reduce AAvetortipo1Tipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TVetor tvetorNode2;
        PTipoBase ptipobaseNode3;
        PExpColchete pexpcolcheteNode4;
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        tvetorNode2 = (TVetor)nodeArrayList1.get(0);
        ptipobaseNode3 = (PTipoBase)nodeArrayList2.get(0);
        pexpcolcheteNode4 = (PExpColchete)nodeArrayList3.get(0);
        {
            // Block
        }

        ptipoNode1 = new AVetorTipo(tvetorNode2, ptipobaseNode3, pexpcolcheteNode4, listNode5);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new10() /* reduce AAvetortipo2Tipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TVetor tvetorNode2;
        PTipoBase ptipobaseNode3;
        PExpColchete pexpcolcheteNode4;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        tvetorNode2 = (TVetor)nodeArrayList1.get(0);
        ptipobaseNode3 = (PTipoBase)nodeArrayList2.get(0);
        pexpcolcheteNode4 = (PExpColchete)nodeArrayList3.get(0);
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        ptipoNode1 = new AVetorTipo(tvetorNode2, ptipobaseNode3, pexpcolcheteNode4, listNode6);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new11() /* reduce AExpColchete */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpColchete pexpcolcheteNode1;
        {
            // Block
        TAbreColchete tabrecolcheteNode2;
        PExp pexpNode3;
        TFechaColchete tfechacolcheteNode4;
        tabrecolcheteNode2 = (TAbreColchete)nodeArrayList1.get(0);
        pexpNode3 = (PExp)nodeArrayList2.get(0);
        tfechacolcheteNode4 = (TFechaColchete)nodeArrayList3.get(0);

        pexpcolcheteNode1 = new AExpColchete(tabrecolcheteNode2, pexpNode3, tfechacolcheteNode4);
        }
	nodeList.add(pexpcolcheteNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new12() /* reduce ANumeroTipoBase */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoBase ptipobaseNode1;
        {
            // Block
        TBaseNumero tbasenumeroNode2;
        tbasenumeroNode2 = (TBaseNumero)nodeArrayList1.get(0);

        ptipobaseNode1 = new ANumeroTipoBase(tbasenumeroNode2);
        }
	nodeList.add(ptipobaseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new13() /* reduce ACaractereTipoBase */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoBase ptipobaseNode1;
        {
            // Block
        TBaseCaractere tbasecaractereNode2;
        tbasecaractereNode2 = (TBaseCaractere)nodeArrayList1.get(0);

        ptipobaseNode1 = new ACaractereTipoBase(tbasecaractereNode2);
        }
	nodeList.add(ptipobaseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new14() /* reduce ABooleanoTipoBase */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoBase ptipobaseNode1;
        {
            // Block
        TBaseBooleano tbasebooleanoNode2;
        tbasebooleanoNode2 = (TBaseBooleano)nodeArrayList1.get(0);

        ptipobaseNode1 = new ABooleanoTipoBase(tbasebooleanoNode2);
        }
	nodeList.add(ptipobaseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new15() /* reduce AAdecfuncao1$Tipo1DecFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecFuncao pdecfuncaoNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        PTipoRetorno ptiporetornoNode3;
        TId tidNode5;
        TAbreParenteses tabreparentesesNode6;
        PParametros pparametrosNode7;
        TFechaParenteses tfechaparentesesNode8;
        PBloco pblocoNode9;
        {
            // Block
        PTipo ptipoNode4;
        ptipoNode4 = (PTipo)nodeArrayList1.get(0);

        ptiporetornoNode3 = new ATipoTipoRetorno(ptipoNode4);
        }
        tidNode5 = (TId)nodeArrayList2.get(0);
        tabreparentesesNode6 = (TAbreParenteses)nodeArrayList3.get(0);
        pparametrosNode7 = (PParametros)nodeArrayList4.get(0);
        tfechaparentesesNode8 = (TFechaParenteses)nodeArrayList5.get(0);
        pblocoNode9 = (PBloco)nodeArrayList6.get(0);

        pdecfuncaoNode1 = new ADecFuncao(null, ptiporetornoNode3, tidNode5, tabreparentesesNode6, pparametrosNode7, tfechaparentesesNode8, pblocoNode9);
        }
	nodeList.add(pdecfuncaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new16() /* reduce AAdecfuncao1$Vazio1DecFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecFuncao pdecfuncaoNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        PTipoRetorno ptiporetornoNode3;
        TId tidNode5;
        TAbreParenteses tabreparentesesNode6;
        PParametros pparametrosNode7;
        TFechaParenteses tfechaparentesesNode8;
        PBloco pblocoNode9;
        {
            // Block
        TVazio tvazioNode4;
        tvazioNode4 = (TVazio)nodeArrayList1.get(0);

        ptiporetornoNode3 = new AVazioTipoRetorno(tvazioNode4);
        }
        tidNode5 = (TId)nodeArrayList2.get(0);
        tabreparentesesNode6 = (TAbreParenteses)nodeArrayList3.get(0);
        pparametrosNode7 = (PParametros)nodeArrayList4.get(0);
        tfechaparentesesNode8 = (TFechaParenteses)nodeArrayList5.get(0);
        pblocoNode9 = (PBloco)nodeArrayList6.get(0);

        pdecfuncaoNode1 = new ADecFuncao(null, ptiporetornoNode3, tidNode5, tabreparentesesNode6, pparametrosNode7, tfechaparentesesNode8, pblocoNode9);
        }
	nodeList.add(pdecfuncaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new17() /* reduce AAdecfuncao2$Tipo1DecFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecFuncao pdecfuncaoNode1;
        {
            // Block
        TSeta tsetaNode2;
        PTipoRetorno ptiporetornoNode3;
        TId tidNode5;
        TAbreParenteses tabreparentesesNode6;
        PParametros pparametrosNode7;
        TFechaParenteses tfechaparentesesNode8;
        PBloco pblocoNode9;
        tsetaNode2 = (TSeta)nodeArrayList1.get(0);
        {
            // Block
        PTipo ptipoNode4;
        ptipoNode4 = (PTipo)nodeArrayList2.get(0);

        ptiporetornoNode3 = new ATipoTipoRetorno(ptipoNode4);
        }
        tidNode5 = (TId)nodeArrayList3.get(0);
        tabreparentesesNode6 = (TAbreParenteses)nodeArrayList4.get(0);
        pparametrosNode7 = (PParametros)nodeArrayList5.get(0);
        tfechaparentesesNode8 = (TFechaParenteses)nodeArrayList6.get(0);
        pblocoNode9 = (PBloco)nodeArrayList7.get(0);

        pdecfuncaoNode1 = new ADecFuncao(tsetaNode2, ptiporetornoNode3, tidNode5, tabreparentesesNode6, pparametrosNode7, tfechaparentesesNode8, pblocoNode9);
        }
	nodeList.add(pdecfuncaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new18() /* reduce AAdecfuncao2$Vazio1DecFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecFuncao pdecfuncaoNode1;
        {
            // Block
        TSeta tsetaNode2;
        PTipoRetorno ptiporetornoNode3;
        TId tidNode5;
        TAbreParenteses tabreparentesesNode6;
        PParametros pparametrosNode7;
        TFechaParenteses tfechaparentesesNode8;
        PBloco pblocoNode9;
        tsetaNode2 = (TSeta)nodeArrayList1.get(0);
        {
            // Block
        TVazio tvazioNode4;
        tvazioNode4 = (TVazio)nodeArrayList2.get(0);

        ptiporetornoNode3 = new AVazioTipoRetorno(tvazioNode4);
        }
        tidNode5 = (TId)nodeArrayList3.get(0);
        tabreparentesesNode6 = (TAbreParenteses)nodeArrayList4.get(0);
        pparametrosNode7 = (PParametros)nodeArrayList5.get(0);
        tfechaparentesesNode8 = (TFechaParenteses)nodeArrayList6.get(0);
        pblocoNode9 = (PBloco)nodeArrayList7.get(0);

        pdecfuncaoNode1 = new ADecFuncao(tsetaNode2, ptiporetornoNode3, tidNode5, tabreparentesesNode6, pparametrosNode7, tfechaparentesesNode8, pblocoNode9);
        }
	nodeList.add(pdecfuncaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new19() /* reduce AVazioParametros */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PParametros pparametrosNode1;
        {
            // Block

        pparametrosNode1 = new AVazioParametros();
        }
	nodeList.add(pparametrosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new20() /* reduce AAparametroparametros1Parametros */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParametros pparametrosNode1;
        {
            // Block
        PParametro pparametroNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        pparametroNode2 = (PParametro)nodeArrayList1.get(0);
        {
            // Block
        }

        pparametrosNode1 = new AParametroParametros(pparametroNode2, listNode3);
        }
	nodeList.add(pparametrosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new21() /* reduce AAparametroparametros2Parametros */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParametros pparametrosNode1;
        {
            // Block
        PParametro pparametroNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        pparametroNode2 = (PParametro)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pparametrosNode1 = new AParametroParametros(pparametroNode2, listNode4);
        }
	nodeList.add(pparametrosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new22() /* reduce APipeParametro */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPipeParametro ppipeparametroNode1;
        {
            // Block
        TPipe tpipeNode2;
        PParametro pparametroNode3;
        tpipeNode2 = (TPipe)nodeArrayList1.get(0);
        pparametroNode3 = (PParametro)nodeArrayList2.get(0);

        ppipeparametroNode1 = new APipeParametro(tpipeNode2, pparametroNode3);
        }
	nodeList.add(ppipeparametroNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new23() /* reduce AParametro */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParametro pparametroNode1;
        {
            // Block
        PTipo ptipoNode2;
        TId tidNode3;
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);

        pparametroNode1 = new AParametro(ptipoNode2, tidNode3);
        }
	nodeList.add(pparametroNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new24() /* reduce AAbloco1Bloco */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBloco pblocoNode1;
        {
            // Block
        TInicio tinicioNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        TFim tfimNode5;
        tinicioNode2 = (TInicio)nodeArrayList1.get(0);
        {
            // Block
        }
        {
            // Block
        }
        tfimNode5 = (TFim)nodeArrayList2.get(0);

        pblocoNode1 = new ABloco(tinicioNode2, listNode3, listNode4, tfimNode5);
        }
	nodeList.add(pblocoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new25() /* reduce AAbloco2Bloco */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBloco pblocoNode1;
        {
            // Block
        TInicio tinicioNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        TFim tfimNode6;
        tinicioNode2 = (TInicio)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        }
        tfimNode6 = (TFim)nodeArrayList3.get(0);

        pblocoNode1 = new ABloco(tinicioNode2, listNode4, listNode5, tfimNode6);
        }
	nodeList.add(pblocoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new26() /* reduce AAbloco3Bloco */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBloco pblocoNode1;
        {
            // Block
        TInicio tinicioNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        TFim tfimNode6;
        tinicioNode2 = (TInicio)nodeArrayList1.get(0);
        {
            // Block
        }
        {
            // Block
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        listNode4 = (LinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        tfimNode6 = (TFim)nodeArrayList3.get(0);

        pblocoNode1 = new ABloco(tinicioNode2, listNode3, listNode5, tfimNode6);
        }
	nodeList.add(pblocoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new27() /* reduce AAbloco4Bloco */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBloco pblocoNode1;
        {
            // Block
        TInicio tinicioNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        TFim tfimNode7;
        tinicioNode2 = (TInicio)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        tfimNode7 = (TFim)nodeArrayList4.get(0);

        pblocoNode1 = new ABloco(tinicioNode2, listNode4, listNode6, tfimNode7);
        }
	nodeList.add(pblocoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new28() /* reduce AAtrib */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAtrib patribNode1;
        {
            // Block
        PVar pvarNode2;
        TAtribuir tatribuirNode3;
        PExp pexpNode4;
        pvarNode2 = (PVar)nodeArrayList1.get(0);
        tatribuirNode3 = (TAtribuir)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);

        patribNode1 = new AAtrib(pvarNode2, tatribuirNode3, pexpNode4);
        }
	nodeList.add(patribNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new29() /* reduce AAlistaatrib1ListaAtrib */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaAtrib plistaatribNode1;
        {
            // Block
        PAtrib patribNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        patribNode2 = (PAtrib)nodeArrayList1.get(0);
        {
            // Block
        }

        plistaatribNode1 = new AListaAtrib(patribNode2, listNode3);
        }
	nodeList.add(plistaatribNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new30() /* reduce AAlistaatrib2ListaAtrib */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaAtrib plistaatribNode1;
        {
            // Block
        PAtrib patribNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        patribNode2 = (PAtrib)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        plistaatribNode1 = new AListaAtrib(patribNode2, listNode4);
        }
	nodeList.add(plistaatribNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new31() /* reduce AVirgulaAtrib */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVirgulaAtrib pvirgulaatribNode1;
        {
            // Block
        TVirgula tvirgulaNode2;
        PAtrib patribNode3;
        tvirgulaNode2 = (TVirgula)nodeArrayList1.get(0);
        patribNode3 = (PAtrib)nodeArrayList2.get(0);

        pvirgulaatribNode1 = new AVirgulaAtrib(tvirgulaNode2, patribNode3);
        }
	nodeList.add(pvirgulaatribNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new32() /* reduce ACasamComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PComandoCasam pcomandocasamNode2;
        pcomandocasamNode2 = (PComandoCasam)nodeArrayList1.get(0);

        pcomandoNode1 = new ACasamComando(pcomandocasamNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new33() /* reduce ASemCasamComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PComandoSemCasam pcomandosemcasamNode2;
        pcomandosemcasamNode2 = (PComandoSemCasam)nodeArrayList1.get(0);

        pcomandoNode1 = new ASemCasamComando(pcomandosemcasamNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new34() /* reduce ASeComandoCasam */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoCasam pcomandocasamNode1;
        {
            // Block
        TSe tseNode2;
        TAbreParenteses tabreparentesesNode3;
        PExp pexpNode4;
        TFechaParenteses tfechaparentesesNode5;
        PComando pcomandoNode6;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tabreparentesesNode3 = (TAbreParenteses)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tfechaparentesesNode5 = (TFechaParenteses)nodeArrayList4.get(0);
        pcomandoNode6 = (PComando)nodeArrayList5.get(0);

        pcomandocasamNode1 = new ASeComandoCasam(tseNode2, tabreparentesesNode3, pexpNode4, tfechaparentesesNode5, pcomandoNode6);
        }
	nodeList.add(pcomandocasamNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new35() /* reduce ASenaoComandoCasam */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoCasam pcomandocasamNode1;
        {
            // Block
        TSe tseNode2;
        TAbreParenteses tabreparentesesNode3;
        PExp pexpNode4;
        TFechaParenteses tfechaparentesesNode5;
        PComandoSemCasam pcomandosemcasamNode6;
        TSenao tsenaoNode7;
        PComandoCasam pcomandocasamNode8;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tabreparentesesNode3 = (TAbreParenteses)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tfechaparentesesNode5 = (TFechaParenteses)nodeArrayList4.get(0);
        pcomandosemcasamNode6 = (PComandoSemCasam)nodeArrayList5.get(0);
        tsenaoNode7 = (TSenao)nodeArrayList6.get(0);
        pcomandocasamNode8 = (PComandoCasam)nodeArrayList7.get(0);

        pcomandocasamNode1 = new ASenaoComandoCasam(tseNode2, tabreparentesesNode3, pexpNode4, tfechaparentesesNode5, pcomandosemcasamNode6, tsenaoNode7, pcomandocasamNode8);
        }
	nodeList.add(pcomandocasamNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new36() /* reduce AEnquantoComandoCasam */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoCasam pcomandocasamNode1;
        {
            // Block
        TEnquanto tenquantoNode2;
        TAbreParenteses tabreparentesesNode3;
        PExp pexpNode4;
        TFechaParenteses tfechaparentesesNode5;
        PComando pcomandoNode6;
        tenquantoNode2 = (TEnquanto)nodeArrayList1.get(0);
        tabreparentesesNode3 = (TAbreParenteses)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tfechaparentesesNode5 = (TFechaParenteses)nodeArrayList4.get(0);
        pcomandoNode6 = (PComando)nodeArrayList5.get(0);

        pcomandocasamNode1 = new AEnquantoComandoCasam(tenquantoNode2, tabreparentesesNode3, pexpNode4, tfechaparentesesNode5, pcomandoNode6);
        }
	nodeList.add(pcomandocasamNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new37() /* reduce AParaComandoCasam */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoCasam pcomandocasamNode1;
        {
            // Block
        TPara tparaNode2;
        TAbreParenteses tabreparentesesNode3;
        PListaAtrib plistaatribNode4;
        TPontoVirgula tpontovirgulaNode5;
        PExp pexpNode6;
        TPontoVirgula tpontovirgulaNode7;
        PListaAtrib plistaatribNode8;
        TFechaParenteses tfechaparentesesNode9;
        PComando pcomandoNode10;
        tparaNode2 = (TPara)nodeArrayList1.get(0);
        tabreparentesesNode3 = (TAbreParenteses)nodeArrayList2.get(0);
        plistaatribNode4 = (PListaAtrib)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontoVirgula)nodeArrayList4.get(0);
        pexpNode6 = (PExp)nodeArrayList5.get(0);
        tpontovirgulaNode7 = (TPontoVirgula)nodeArrayList6.get(0);
        plistaatribNode8 = (PListaAtrib)nodeArrayList7.get(0);
        tfechaparentesesNode9 = (TFechaParenteses)nodeArrayList8.get(0);
        pcomandoNode10 = (PComando)nodeArrayList9.get(0);

        pcomandocasamNode1 = new AParaComandoCasam(tparaNode2, tabreparentesesNode3, plistaatribNode4, tpontovirgulaNode5, pexpNode6, tpontovirgulaNode7, plistaatribNode8, tfechaparentesesNode9, pcomandoNode10);
        }
	nodeList.add(pcomandocasamNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new38() /* reduce AParaCadaComandoCasam */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoCasam pcomandocasamNode1;
        {
            // Block
        TParaCada tparacadaNode2;
        TAbreParenteses tabreparentesesNode3;
        PTipo ptipoNode4;
        TId tidNode5;
        TDoisPontos tdoispontosNode6;
        TId tidNode7;
        TFechaParenteses tfechaparentesesNode8;
        PComando pcomandoNode9;
        tparacadaNode2 = (TParaCada)nodeArrayList1.get(0);
        tabreparentesesNode3 = (TAbreParenteses)nodeArrayList2.get(0);
        ptipoNode4 = (PTipo)nodeArrayList3.get(0);
        tidNode5 = (TId)nodeArrayList4.get(0);
        tdoispontosNode6 = (TDoisPontos)nodeArrayList5.get(0);
        tidNode7 = (TId)nodeArrayList6.get(0);
        tfechaparentesesNode8 = (TFechaParenteses)nodeArrayList7.get(0);
        pcomandoNode9 = (PComando)nodeArrayList8.get(0);

        pcomandocasamNode1 = new AParaCadaComandoCasam(tparacadaNode2, tabreparentesesNode3, ptipoNode4, tidNode5, tdoispontosNode6, tidNode7, tfechaparentesesNode8, pcomandoNode9);
        }
	nodeList.add(pcomandocasamNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new39() /* reduce ASeSenaoComandoSemCasam */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoSemCasam pcomandosemcasamNode1;
        {
            // Block
        TSe tseNode2;
        TAbreParenteses tabreparentesesNode3;
        PExp pexpNode4;
        TFechaParenteses tfechaparentesesNode5;
        PComandoSemCasam pcomandosemcasamNode6;
        TSenao tsenaoNode7;
        PComandoSemCasam pcomandosemcasamNode8;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tabreparentesesNode3 = (TAbreParenteses)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tfechaparentesesNode5 = (TFechaParenteses)nodeArrayList4.get(0);
        pcomandosemcasamNode6 = (PComandoSemCasam)nodeArrayList5.get(0);
        tsenaoNode7 = (TSenao)nodeArrayList6.get(0);
        pcomandosemcasamNode8 = (PComandoSemCasam)nodeArrayList7.get(0);

        pcomandosemcasamNode1 = new ASeSenaoComandoSemCasam(tseNode2, tabreparentesesNode3, pexpNode4, tfechaparentesesNode5, pcomandosemcasamNode6, tsenaoNode7, pcomandosemcasamNode8);
        }
	nodeList.add(pcomandosemcasamNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new40() /* reduce AAtribComandoSemCasam */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoSemCasam pcomandosemcasamNode1;
        {
            // Block
        PAtrib patribNode2;
        TPontoFinal tpontofinalNode3;
        patribNode2 = (PAtrib)nodeArrayList1.get(0);
        tpontofinalNode3 = (TPontoFinal)nodeArrayList2.get(0);

        pcomandosemcasamNode1 = new AAtribComandoSemCasam(patribNode2, tpontofinalNode3);
        }
	nodeList.add(pcomandosemcasamNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new41() /* reduce AAretornecomandosemcasam1ComandoSemCasam */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoSemCasam pcomandosemcasamNode1;
        {
            // Block
        TRetorne tretorneNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        TPontoFinal tpontofinalNode4;
        tretorneNode2 = (TRetorne)nodeArrayList1.get(0);
        tpontofinalNode4 = (TPontoFinal)nodeArrayList2.get(0);

        pcomandosemcasamNode1 = new ARetorneComandoSemCasam(tretorneNode2, null, tpontofinalNode4);
        }
	nodeList.add(pcomandosemcasamNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new42() /* reduce AAretornecomandosemcasam2ComandoSemCasam */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoSemCasam pcomandosemcasamNode1;
        {
            // Block
        TRetorne tretorneNode2;
        PExp pexpNode3;
        TPontoFinal tpontofinalNode4;
        tretorneNode2 = (TRetorne)nodeArrayList1.get(0);
        pexpNode3 = (PExp)nodeArrayList2.get(0);
        tpontofinalNode4 = (TPontoFinal)nodeArrayList3.get(0);

        pcomandosemcasamNode1 = new ARetorneComandoSemCasam(tretorneNode2, pexpNode3, tpontofinalNode4);
        }
	nodeList.add(pcomandosemcasamNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new43() /* reduce ABlocoComandoSemCasam */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoSemCasam pcomandosemcasamNode1;
        {
            // Block
        PBloco pblocoNode2;
        pblocoNode2 = (PBloco)nodeArrayList1.get(0);

        pcomandosemcasamNode1 = new ABlocoComandoSemCasam(pblocoNode2);
        }
	nodeList.add(pcomandosemcasamNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new44() /* reduce AChamadaComandoSemCasam */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoSemCasam pcomandosemcasamNode1;
        {
            // Block
        PChamada pchamadaNode2;
        TPontoFinal tpontofinalNode3;
        pchamadaNode2 = (PChamada)nodeArrayList1.get(0);
        tpontofinalNode3 = (TPontoFinal)nodeArrayList2.get(0);

        pcomandosemcasamNode1 = new AChamadaComandoSemCasam(pchamadaNode2, tpontofinalNode3);
        }
	nodeList.add(pcomandosemcasamNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new45() /* reduce AIdVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVar pvarNode1;
        {
            // Block
        TId tidNode2;
        tidNode2 = (TId)nodeArrayList1.get(0);

        pvarNode1 = new AIdVar(tidNode2);
        }
	nodeList.add(pvarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new46() /* reduce AIndexadaVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVar pvarNode1;
        {
            // Block
        PVar pvarNode2;
        TAbreColchete tabrecolcheteNode3;
        PExp pexpNode4;
        TFechaColchete tfechacolcheteNode5;
        pvarNode2 = (PVar)nodeArrayList1.get(0);
        tabrecolcheteNode3 = (TAbreColchete)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tfechacolcheteNode5 = (TFechaColchete)nodeArrayList4.get(0);

        pvarNode1 = new AIndexadaVar(pvarNode2, tabrecolcheteNode3, pexpNode4, tfechacolcheteNode5);
        }
	nodeList.add(pvarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new47() /* reduce AOuExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PExp pexpNode2;
        TOu touNode3;
        PExp1 pexp1Node4;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        touNode3 = (TOu)nodeArrayList2.get(0);
        pexp1Node4 = (PExp1)nodeArrayList3.get(0);

        pexpNode1 = new AOuExp(pexpNode2, touNode3, pexp1Node4);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new48() /* reduce AExp1Exp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PExp1 pexp1Node2;
        pexp1Node2 = (PExp1)nodeArrayList1.get(0);

        pexpNode1 = new AExp1Exp(pexp1Node2);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new49() /* reduce AEExp1 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp1 pexp1Node1;
        {
            // Block
        PExp1 pexp1Node2;
        TE teNode3;
        PExp2 pexp2Node4;
        pexp1Node2 = (PExp1)nodeArrayList1.get(0);
        teNode3 = (TE)nodeArrayList2.get(0);
        pexp2Node4 = (PExp2)nodeArrayList3.get(0);

        pexp1Node1 = new AEExp1(pexp1Node2, teNode3, pexp2Node4);
        }
	nodeList.add(pexp1Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new50() /* reduce AExp1 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp1 pexp1Node1;
        {
            // Block
        PExp2 pexp2Node2;
        pexp2Node2 = (PExp2)nodeArrayList1.get(0);

        pexp1Node1 = new AExp1(pexp2Node2);
        }
	nodeList.add(pexp1Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new51() /* reduce AIgualExp2 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp2 pexp2Node1;
        {
            // Block
        PExp2 pexp2Node2;
        TIgual tigualNode3;
        PExp3 pexp3Node4;
        pexp2Node2 = (PExp2)nodeArrayList1.get(0);
        tigualNode3 = (TIgual)nodeArrayList2.get(0);
        pexp3Node4 = (PExp3)nodeArrayList3.get(0);

        pexp2Node1 = new AIgualExp2(pexp2Node2, tigualNode3, pexp3Node4);
        }
	nodeList.add(pexp2Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new52() /* reduce AExp2 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp2 pexp2Node1;
        {
            // Block
        PExp3 pexp3Node2;
        pexp3Node2 = (PExp3)nodeArrayList1.get(0);

        pexp2Node1 = new AExp2(pexp3Node2);
        }
	nodeList.add(pexp2Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new53() /* reduce AMenorIgualExp3 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp3 pexp3Node1;
        {
            // Block
        PExp3 pexp3Node2;
        TMenorIgual tmenorigualNode3;
        PExp4 pexp4Node4;
        pexp3Node2 = (PExp3)nodeArrayList1.get(0);
        tmenorigualNode3 = (TMenorIgual)nodeArrayList2.get(0);
        pexp4Node4 = (PExp4)nodeArrayList3.get(0);

        pexp3Node1 = new AMenorIgualExp3(pexp3Node2, tmenorigualNode3, pexp4Node4);
        }
	nodeList.add(pexp3Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new54() /* reduce AExp3 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp3 pexp3Node1;
        {
            // Block
        PExp4 pexp4Node2;
        pexp4Node2 = (PExp4)nodeArrayList1.get(0);

        pexp3Node1 = new AExp3(pexp4Node2);
        }
	nodeList.add(pexp3Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new55() /* reduce AMaiorIgualExp4 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp4 pexp4Node1;
        {
            // Block
        PExp4 pexp4Node2;
        TMaiorIgual tmaiorigualNode3;
        PExp5 pexp5Node4;
        pexp4Node2 = (PExp4)nodeArrayList1.get(0);
        tmaiorigualNode3 = (TMaiorIgual)nodeArrayList2.get(0);
        pexp5Node4 = (PExp5)nodeArrayList3.get(0);

        pexp4Node1 = new AMaiorIgualExp4(pexp4Node2, tmaiorigualNode3, pexp5Node4);
        }
	nodeList.add(pexp4Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new56() /* reduce AExp4 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp4 pexp4Node1;
        {
            // Block
        PExp5 pexp5Node2;
        pexp5Node2 = (PExp5)nodeArrayList1.get(0);

        pexp4Node1 = new AExp4(pexp5Node2);
        }
	nodeList.add(pexp4Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new57() /* reduce AMenorExp5 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp5 pexp5Node1;
        {
            // Block
        PExp5 pexp5Node2;
        TMenor tmenorNode3;
        PExp6 pexp6Node4;
        pexp5Node2 = (PExp5)nodeArrayList1.get(0);
        tmenorNode3 = (TMenor)nodeArrayList2.get(0);
        pexp6Node4 = (PExp6)nodeArrayList3.get(0);

        pexp5Node1 = new AMenorExp5(pexp5Node2, tmenorNode3, pexp6Node4);
        }
	nodeList.add(pexp5Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new58() /* reduce AExp5 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp5 pexp5Node1;
        {
            // Block
        PExp6 pexp6Node2;
        pexp6Node2 = (PExp6)nodeArrayList1.get(0);

        pexp5Node1 = new AExp5(pexp6Node2);
        }
	nodeList.add(pexp5Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new59() /* reduce AMaiorExp6 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp6 pexp6Node1;
        {
            // Block
        PExp6 pexp6Node2;
        TMaior tmaiorNode3;
        PExp7 pexp7Node4;
        pexp6Node2 = (PExp6)nodeArrayList1.get(0);
        tmaiorNode3 = (TMaior)nodeArrayList2.get(0);
        pexp7Node4 = (PExp7)nodeArrayList3.get(0);

        pexp6Node1 = new AMaiorExp6(pexp6Node2, tmaiorNode3, pexp7Node4);
        }
	nodeList.add(pexp6Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new60() /* reduce AExp6 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp6 pexp6Node1;
        {
            // Block
        PExp7 pexp7Node2;
        pexp7Node2 = (PExp7)nodeArrayList1.get(0);

        pexp6Node1 = new AExp6(pexp7Node2);
        }
	nodeList.add(pexp6Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new61() /* reduce AMaisExp7 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp7 pexp7Node1;
        {
            // Block
        PExp7 pexp7Node2;
        TMais tmaisNode3;
        PExp8 pexp8Node4;
        pexp7Node2 = (PExp7)nodeArrayList1.get(0);
        tmaisNode3 = (TMais)nodeArrayList2.get(0);
        pexp8Node4 = (PExp8)nodeArrayList3.get(0);

        pexp7Node1 = new AMaisExp7(pexp7Node2, tmaisNode3, pexp8Node4);
        }
	nodeList.add(pexp7Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new62() /* reduce AExp7 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp7 pexp7Node1;
        {
            // Block
        PExp8 pexp8Node2;
        pexp8Node2 = (PExp8)nodeArrayList1.get(0);

        pexp7Node1 = new AExp7(pexp8Node2);
        }
	nodeList.add(pexp7Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new63() /* reduce AMenosExp8 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp8 pexp8Node1;
        {
            // Block
        PExp8 pexp8Node2;
        TMenos tmenosNode3;
        PExp9 pexp9Node4;
        pexp8Node2 = (PExp8)nodeArrayList1.get(0);
        tmenosNode3 = (TMenos)nodeArrayList2.get(0);
        pexp9Node4 = (PExp9)nodeArrayList3.get(0);

        pexp8Node1 = new AMenosExp8(pexp8Node2, tmenosNode3, pexp9Node4);
        }
	nodeList.add(pexp8Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new64() /* reduce AExp8 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp8 pexp8Node1;
        {
            // Block
        PExp9 pexp9Node2;
        pexp9Node2 = (PExp9)nodeArrayList1.get(0);

        pexp8Node1 = new AExp8(pexp9Node2);
        }
	nodeList.add(pexp8Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new65() /* reduce AMultExp9 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp9 pexp9Node1;
        {
            // Block
        PExp9 pexp9Node2;
        TMult tmultNode3;
        PExp10 pexp10Node4;
        pexp9Node2 = (PExp9)nodeArrayList1.get(0);
        tmultNode3 = (TMult)nodeArrayList2.get(0);
        pexp10Node4 = (PExp10)nodeArrayList3.get(0);

        pexp9Node1 = new AMultExp9(pexp9Node2, tmultNode3, pexp10Node4);
        }
	nodeList.add(pexp9Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new66() /* reduce AExp9 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp9 pexp9Node1;
        {
            // Block
        PExp10 pexp10Node2;
        pexp10Node2 = (PExp10)nodeArrayList1.get(0);

        pexp9Node1 = new AExp9(pexp10Node2);
        }
	nodeList.add(pexp9Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new67() /* reduce ADivExp10 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp10 pexp10Node1;
        {
            // Block
        PExp10 pexp10Node2;
        TDiv tdivNode3;
        PExp11 pexp11Node4;
        pexp10Node2 = (PExp10)nodeArrayList1.get(0);
        tdivNode3 = (TDiv)nodeArrayList2.get(0);
        pexp11Node4 = (PExp11)nodeArrayList3.get(0);

        pexp10Node1 = new ADivExp10(pexp10Node2, tdivNode3, pexp11Node4);
        }
	nodeList.add(pexp10Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new68() /* reduce AExp10 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp10 pexp10Node1;
        {
            // Block
        PExp11 pexp11Node2;
        pexp11Node2 = (PExp11)nodeArrayList1.get(0);

        pexp10Node1 = new AExp10(pexp11Node2);
        }
	nodeList.add(pexp10Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new69() /* reduce ANaoExp11 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp11 pexp11Node1;
        {
            // Block
        TNao tnaoNode2;
        PExp12 pexp12Node3;
        tnaoNode2 = (TNao)nodeArrayList1.get(0);
        pexp12Node3 = (PExp12)nodeArrayList2.get(0);

        pexp11Node1 = new ANaoExp11(tnaoNode2, pexp12Node3);
        }
	nodeList.add(pexp11Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new70() /* reduce AExp11 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp11 pexp11Node1;
        {
            // Block
        PExp12 pexp12Node2;
        pexp12Node2 = (PExp12)nodeArrayList1.get(0);

        pexp11Node1 = new AExp11(pexp12Node2);
        }
	nodeList.add(pexp11Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new71() /* reduce AParentesesExp12 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp12 pexp12Node1;
        {
            // Block
        TAbreParenteses tabreparentesesNode2;
        PExp pexpNode3;
        TFechaParenteses tfechaparentesesNode4;
        tabreparentesesNode2 = (TAbreParenteses)nodeArrayList1.get(0);
        pexpNode3 = (PExp)nodeArrayList2.get(0);
        tfechaparentesesNode4 = (TFechaParenteses)nodeArrayList3.get(0);

        pexp12Node1 = new AParentesesExp12(tabreparentesesNode2, pexpNode3, tfechaparentesesNode4);
        }
	nodeList.add(pexp12Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new72() /* reduce AExp12 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp12 pexp12Node1;
        {
            // Block
        PExp13 pexp13Node2;
        pexp13Node2 = (PExp13)nodeArrayList1.get(0);

        pexp12Node1 = new AExp12(pexp13Node2);
        }
	nodeList.add(pexp12Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new73() /* reduce AChamadaExp13 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp13 pexp13Node1;
        {
            // Block
        PChamada pchamadaNode2;
        pchamadaNode2 = (PChamada)nodeArrayList1.get(0);

        pexp13Node1 = new AChamadaExp13(pchamadaNode2);
        }
	nodeList.add(pexp13Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new74() /* reduce AVarExp13 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp13 pexp13Node1;
        {
            // Block
        PVar pvarNode2;
        pvarNode2 = (PVar)nodeArrayList1.get(0);

        pexp13Node1 = new AVarExp13(pvarNode2);
        }
	nodeList.add(pexp13Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new75() /* reduce ANumeroExp13 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp13 pexp13Node1;
        {
            // Block
        TNumero tnumeroNode2;
        tnumeroNode2 = (TNumero)nodeArrayList1.get(0);

        pexp13Node1 = new ANumeroExp13(tnumeroNode2);
        }
	nodeList.add(pexp13Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new76() /* reduce ACaractereExp13 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp13 pexp13Node1;
        {
            // Block
        TCaractere tcaractereNode2;
        tcaractereNode2 = (TCaractere)nodeArrayList1.get(0);

        pexp13Node1 = new ACaractereExp13(tcaractereNode2);
        }
	nodeList.add(pexp13Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new77() /* reduce ABooleanoExp13 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp13 pexp13Node1;
        {
            // Block
        TBooleano tbooleanoNode2;
        tbooleanoNode2 = (TBooleano)nodeArrayList1.get(0);

        pexp13Node1 = new ABooleanoExp13(tbooleanoNode2);
        }
	nodeList.add(pexp13Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new78() /* reduce AStringExp13 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp13 pexp13Node1;
        {
            // Block
        TVetorUnidimensional tvetorunidimensionalNode2;
        tvetorunidimensionalNode2 = (TVetorUnidimensional)nodeArrayList1.get(0);

        pexp13Node1 = new AStringExp13(tvetorunidimensionalNode2);
        }
	nodeList.add(pexp13Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new79() /* reduce AChamada */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PChamada pchamadaNode1;
        {
            // Block
        TId tidNode2;
        TAbreParenteses tabreparentesesNode3;
        PListaExp plistaexpNode4;
        TFechaParenteses tfechaparentesesNode5;
        tidNode2 = (TId)nodeArrayList1.get(0);
        tabreparentesesNode3 = (TAbreParenteses)nodeArrayList2.get(0);
        plistaexpNode4 = (PListaExp)nodeArrayList3.get(0);
        tfechaparentesesNode5 = (TFechaParenteses)nodeArrayList4.get(0);

        pchamadaNode1 = new AChamada(tidNode2, tabreparentesesNode3, plistaexpNode4, tfechaparentesesNode5);
        }
	nodeList.add(pchamadaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new80() /* reduce AVazioListaExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PListaExp plistaexpNode1;
        {
            // Block

        plistaexpNode1 = new AVazioListaExp();
        }
	nodeList.add(plistaexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new81() /* reduce AAlistaexplistaexp1ListaExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaExp plistaexpNode1;
        {
            // Block
        PExp pexpNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        {
            // Block
        }

        plistaexpNode1 = new AListaExpListaExp(pexpNode2, listNode3);
        }
	nodeList.add(plistaexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new82() /* reduce AAlistaexplistaexp2ListaExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaExp plistaexpNode1;
        {
            // Block
        PExp pexpNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        plistaexpNode1 = new AListaExpListaExp(pexpNode2, listNode4);
        }
	nodeList.add(plistaexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new83() /* reduce APipeExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPipeExp ppipeexpNode1;
        {
            // Block
        TPipe tpipeNode2;
        PExp pexpNode3;
        tpipeNode2 = (TPipe)nodeArrayList1.get(0);
        pexpNode3 = (PExp)nodeArrayList2.get(0);

        ppipeexpNode1 = new APipeExp(tpipeNode2, pexpNode3);
        }
	nodeList.add(ppipeexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new84() /* reduce ATerminal$DecVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PDecVariavel pdecvariavelNode1;
        pdecvariavelNode1 = (PDecVariavel)nodeArrayList1.get(0);
	if(pdecvariavelNode1 != null)
	{
	  listNode2.add(pdecvariavelNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new85() /* reduce ANonTerminal$DecVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PDecVariavel pdecvariavelNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pdecvariavelNode2 = (PDecVariavel)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pdecvariavelNode2 != null)
	{
	  listNode3.add(pdecvariavelNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new86() /* reduce ATerminal$DecFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PDecFuncao pdecfuncaoNode1;
        pdecfuncaoNode1 = (PDecFuncao)nodeArrayList1.get(0);
	if(pdecfuncaoNode1 != null)
	{
	  listNode2.add(pdecfuncaoNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new87() /* reduce ANonTerminal$DecFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PDecFuncao pdecfuncaoNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pdecfuncaoNode2 = (PDecFuncao)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pdecfuncaoNode2 != null)
	{
	  listNode3.add(pdecfuncaoNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new88() /* reduce ATerminal$VirgulaId */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PVirgulaId pvirgulaidNode1;
        pvirgulaidNode1 = (PVirgulaId)nodeArrayList1.get(0);
	if(pvirgulaidNode1 != null)
	{
	  listNode2.add(pvirgulaidNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new89() /* reduce ANonTerminal$VirgulaId */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PVirgulaId pvirgulaidNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pvirgulaidNode2 = (PVirgulaId)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pvirgulaidNode2 != null)
	{
	  listNode3.add(pvirgulaidNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new90() /* reduce ATerminal$ExpColchete */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PExpColchete pexpcolcheteNode1;
        pexpcolcheteNode1 = (PExpColchete)nodeArrayList1.get(0);
	if(pexpcolcheteNode1 != null)
	{
	  listNode2.add(pexpcolcheteNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new91() /* reduce ANonTerminal$ExpColchete */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PExpColchete pexpcolcheteNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pexpcolcheteNode2 = (PExpColchete)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pexpcolcheteNode2 != null)
	{
	  listNode3.add(pexpcolcheteNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new92() /* reduce ATerminal$PipeParametro */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PPipeParametro ppipeparametroNode1;
        ppipeparametroNode1 = (PPipeParametro)nodeArrayList1.get(0);
	if(ppipeparametroNode1 != null)
	{
	  listNode2.add(ppipeparametroNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new93() /* reduce ANonTerminal$PipeParametro */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PPipeParametro ppipeparametroNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        ppipeparametroNode2 = (PPipeParametro)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(ppipeparametroNode2 != null)
	{
	  listNode3.add(ppipeparametroNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new94() /* reduce ATerminal$Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PComando pcomandoNode1;
        pcomandoNode1 = (PComando)nodeArrayList1.get(0);
	if(pcomandoNode1 != null)
	{
	  listNode2.add(pcomandoNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new95() /* reduce ANonTerminal$Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PComando pcomandoNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pcomandoNode2 = (PComando)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pcomandoNode2 != null)
	{
	  listNode3.add(pcomandoNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new96() /* reduce ATerminal$VirgulaAtrib */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PVirgulaAtrib pvirgulaatribNode1;
        pvirgulaatribNode1 = (PVirgulaAtrib)nodeArrayList1.get(0);
	if(pvirgulaatribNode1 != null)
	{
	  listNode2.add(pvirgulaatribNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new97() /* reduce ANonTerminal$VirgulaAtrib */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PVirgulaAtrib pvirgulaatribNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pvirgulaatribNode2 = (PVirgulaAtrib)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pvirgulaatribNode2 != null)
	{
	  listNode3.add(pvirgulaatribNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new98() /* reduce ATerminal$PipeExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PPipeExp ppipeexpNode1;
        ppipeexpNode1 = (PPipeExp)nodeArrayList1.get(0);
	if(ppipeexpNode1 != null)
	{
	  listNode2.add(ppipeexpNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new99() /* reduce ANonTerminal$PipeExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PPipeExp ppipeexpNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        ppipeexpNode2 = (PPipeExp)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(ppipeexpNode2 != null)
	{
	  listNode3.add(ppipeexpNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, REDUCE, 0}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, {4, SHIFT, 5}, {34, SHIFT, 6}, },
			{{-1, REDUCE, 13}, },
			{{-1, REDUCE, 12}, },
			{{-1, REDUCE, 14}, },
			{{-1, ERROR, 4}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, },
			{{-1, ERROR, 5}, {40, SHIFT, 15}, },
			{{-1, ERROR, 6}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, {4, SHIFT, 16}, },
			{{-1, ERROR, 7}, {41, ACCEPT, -1}, },
			{{-1, REDUCE, 84}, },
			{{-1, ERROR, 9}, {40, SHIFT, 18}, },
			{{-1, REDUCE, 8}, },
			{{-1, REDUCE, 86}, },
			{{-1, REDUCE, 1}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, {4, SHIFT, 5}, {34, SHIFT, 6}, },
			{{-1, REDUCE, 2}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, {4, SHIFT, 5}, {34, SHIFT, 6}, },
			{{-1, ERROR, 14}, {32, SHIFT, 24}, },
			{{-1, ERROR, 15}, {35, SHIFT, 26}, },
			{{-1, ERROR, 16}, {40, SHIFT, 27}, },
			{{-1, ERROR, 17}, {40, SHIFT, 28}, },
			{{-1, REDUCE, 5}, {31, SHIFT, 29}, {35, SHIFT, 30}, },
			{{-1, ERROR, 19}, {30, SHIFT, 33}, },
			{{-1, REDUCE, 85}, },
			{{-1, REDUCE, 3}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, {4, SHIFT, 5}, {34, SHIFT, 6}, },
			{{-1, ERROR, 22}, {40, SHIFT, 34}, },
			{{-1, REDUCE, 87}, },
			{{-1, ERROR, 24}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, REDUCE, 9}, {32, SHIFT, 24}, },
			{{-1, REDUCE, 19}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, },
			{{-1, ERROR, 27}, {35, SHIFT, 63}, },
			{{-1, ERROR, 28}, {35, SHIFT, 64}, },
			{{-1, ERROR, 29}, {40, SHIFT, 65}, },
			{{-1, REDUCE, 19}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, },
			{{-1, REDUCE, 88}, },
			{{-1, REDUCE, 6}, {31, SHIFT, 29}, },
			{{-1, REDUCE, 4}, },
			{{-1, ERROR, 34}, {35, SHIFT, 30}, },
			{{-1, REDUCE, 76}, },
			{{-1, REDUCE, 77}, },
			{{-1, REDUCE, 75}, },
			{{-1, REDUCE, 78}, },
			{{-1, ERROR, 39}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, ERROR, 40}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, REDUCE, 45}, {35, SHIFT, 70}, },
			{{-1, REDUCE, 74}, {32, SHIFT, 71}, },
			{{-1, ERROR, 43}, {28, SHIFT, 72}, {33, SHIFT, 73}, },
			{{-1, REDUCE, 48}, {27, SHIFT, 74}, },
			{{-1, REDUCE, 50}, {25, SHIFT, 75}, },
			{{-1, REDUCE, 52}, {24, SHIFT, 76}, },
			{{-1, REDUCE, 54}, {23, SHIFT, 77}, },
			{{-1, REDUCE, 56}, {22, SHIFT, 78}, },
			{{-1, REDUCE, 58}, {21, SHIFT, 79}, },
			{{-1, REDUCE, 60}, {17, SHIFT, 80}, },
			{{-1, REDUCE, 62}, {18, SHIFT, 81}, },
			{{-1, REDUCE, 64}, {19, SHIFT, 82}, },
			{{-1, REDUCE, 66}, {20, SHIFT, 83}, },
			{{-1, REDUCE, 68}, },
			{{-1, REDUCE, 70}, },
			{{-1, REDUCE, 72}, },
			{{-1, REDUCE, 73}, },
			{{-1, REDUCE, 90}, },
			{{-1, REDUCE, 10}, {32, SHIFT, 24}, },
			{{-1, ERROR, 60}, {40, SHIFT, 85}, },
			{{-1, ERROR, 61}, {36, SHIFT, 86}, },
			{{-1, REDUCE, 20}, {37, SHIFT, 87}, },
			{{-1, REDUCE, 19}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, },
			{{-1, REDUCE, 19}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, },
			{{-1, REDUCE, 7}, },
			{{-1, ERROR, 66}, {36, SHIFT, 92}, },
			{{-1, REDUCE, 89}, },
			{{-1, REDUCE, 69}, },
			{{-1, ERROR, 69}, {28, SHIFT, 72}, {36, SHIFT, 93}, },
			{{-1, REDUCE, 80}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, ERROR, 71}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, ERROR, 72}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, REDUCE, 11}, },
			{{-1, ERROR, 74}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, ERROR, 75}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, ERROR, 76}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, ERROR, 77}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, ERROR, 78}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, ERROR, 79}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, ERROR, 80}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, ERROR, 81}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, ERROR, 82}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, ERROR, 83}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, REDUCE, 91}, },
			{{-1, REDUCE, 23}, },
			{{-1, ERROR, 86}, {9, SHIFT, 108}, },
			{{-1, ERROR, 87}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, },
			{{-1, REDUCE, 92}, },
			{{-1, REDUCE, 21}, {37, SHIFT, 87}, },
			{{-1, ERROR, 90}, {36, SHIFT, 112}, },
			{{-1, ERROR, 91}, {36, SHIFT, 113}, },
			{{-1, ERROR, 92}, {9, SHIFT, 108}, },
			{{-1, REDUCE, 71}, },
			{{-1, REDUCE, 81}, {28, SHIFT, 72}, {37, SHIFT, 115}, },
			{{-1, ERROR, 95}, {36, SHIFT, 118}, },
			{{-1, ERROR, 96}, {28, SHIFT, 72}, {33, SHIFT, 119}, },
			{{-1, REDUCE, 47}, {27, SHIFT, 74}, },
			{{-1, REDUCE, 49}, {25, SHIFT, 75}, },
			{{-1, REDUCE, 51}, {24, SHIFT, 76}, },
			{{-1, REDUCE, 53}, {23, SHIFT, 77}, },
			{{-1, REDUCE, 55}, {22, SHIFT, 78}, },
			{{-1, REDUCE, 57}, {21, SHIFT, 79}, },
			{{-1, REDUCE, 59}, {17, SHIFT, 80}, },
			{{-1, REDUCE, 61}, {18, SHIFT, 81}, },
			{{-1, REDUCE, 63}, {19, SHIFT, 82}, },
			{{-1, REDUCE, 65}, {20, SHIFT, 83}, },
			{{-1, REDUCE, 67}, },
			{{-1, ERROR, 108}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, {9, SHIFT, 108}, {10, SHIFT, 120}, {11, SHIFT, 121}, {12, SHIFT, 122}, {13, SHIFT, 123}, {14, SHIFT, 124}, {16, SHIFT, 125}, {40, SHIFT, 41}, },
			{{-1, REDUCE, 16}, },
			{{-1, REDUCE, 22}, },
			{{-1, REDUCE, 93}, },
			{{-1, ERROR, 112}, {9, SHIFT, 108}, },
			{{-1, ERROR, 113}, {9, SHIFT, 108}, },
			{{-1, REDUCE, 15}, },
			{{-1, ERROR, 115}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, REDUCE, 98}, },
			{{-1, REDUCE, 82}, {37, SHIFT, 115}, },
			{{-1, REDUCE, 79}, },
			{{-1, REDUCE, 46}, },
			{{-1, REDUCE, 24}, },
			{{-1, ERROR, 121}, {35, SHIFT, 140}, },
			{{-1, ERROR, 122}, {35, SHIFT, 141}, },
			{{-1, ERROR, 123}, {35, SHIFT, 142}, },
			{{-1, ERROR, 124}, {35, SHIFT, 143}, },
			{{-1, ERROR, 125}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {30, SHIFT, 144}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, ERROR, 126}, {40, SHIFT, 146}, },
			{{-1, REDUCE, 43}, },
			{{-1, ERROR, 128}, {30, SHIFT, 147}, },
			{{-1, REDUCE, 94}, },
			{{-1, REDUCE, 32}, },
			{{-1, REDUCE, 33}, },
			{{-1, ERROR, 132}, {29, SHIFT, 148}, {32, SHIFT, 71}, },
			{{-1, ERROR, 133}, {30, SHIFT, 149}, },
			{{-1, ERROR, 134}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, {9, SHIFT, 108}, {10, SHIFT, 150}, {11, SHIFT, 121}, {12, SHIFT, 122}, {13, SHIFT, 123}, {14, SHIFT, 124}, {16, SHIFT, 125}, {40, SHIFT, 41}, },
			{{-1, ERROR, 135}, {9, SHIFT, 108}, {10, SHIFT, 152}, {11, SHIFT, 121}, {12, SHIFT, 122}, {13, SHIFT, 123}, {14, SHIFT, 124}, {16, SHIFT, 125}, {40, SHIFT, 41}, },
			{{-1, REDUCE, 18}, },
			{{-1, REDUCE, 17}, },
			{{-1, REDUCE, 83}, {28, SHIFT, 72}, },
			{{-1, REDUCE, 99}, },
			{{-1, ERROR, 140}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, ERROR, 141}, {40, SHIFT, 155}, },
			{{-1, ERROR, 142}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, },
			{{-1, ERROR, 143}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, REDUCE, 41}, },
			{{-1, ERROR, 145}, {28, SHIFT, 72}, {30, SHIFT, 160}, },
			{{-1, REDUCE, 5}, {31, SHIFT, 29}, },
			{{-1, REDUCE, 40}, },
			{{-1, ERROR, 148}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, REDUCE, 44}, },
			{{-1, REDUCE, 25}, },
			{{-1, ERROR, 151}, {9, SHIFT, 108}, {10, SHIFT, 162}, {11, SHIFT, 121}, {12, SHIFT, 122}, {13, SHIFT, 123}, {14, SHIFT, 124}, {16, SHIFT, 125}, {40, SHIFT, 41}, },
			{{-1, REDUCE, 26}, },
			{{-1, REDUCE, 95}, },
			{{-1, ERROR, 154}, {28, SHIFT, 72}, {36, SHIFT, 163}, },
			{{-1, REDUCE, 45}, },
			{{-1, REDUCE, 29}, {31, SHIFT, 164}, },
			{{-1, ERROR, 157}, {38, SHIFT, 167}, },
			{{-1, ERROR, 158}, {40, SHIFT, 168}, },
			{{-1, ERROR, 159}, {28, SHIFT, 72}, {36, SHIFT, 169}, },
			{{-1, REDUCE, 42}, },
			{{-1, REDUCE, 28}, {28, SHIFT, 72}, },
			{{-1, REDUCE, 27}, },
			{{-1, ERROR, 163}, {9, SHIFT, 108}, {11, SHIFT, 121}, {12, SHIFT, 122}, {13, SHIFT, 123}, {14, SHIFT, 124}, {16, SHIFT, 125}, {40, SHIFT, 41}, },
			{{-1, ERROR, 164}, {40, SHIFT, 155}, },
			{{-1, REDUCE, 96}, },
			{{-1, REDUCE, 30}, {31, SHIFT, 164}, },
			{{-1, ERROR, 167}, {5, SHIFT, 35}, {6, SHIFT, 36}, {7, SHIFT, 37}, {8, SHIFT, 38}, {26, SHIFT, 39}, {35, SHIFT, 40}, {40, SHIFT, 41}, },
			{{-1, ERROR, 168}, {39, SHIFT, 174}, },
			{{-1, ERROR, 169}, {9, SHIFT, 108}, {11, SHIFT, 121}, {12, SHIFT, 122}, {13, SHIFT, 123}, {14, SHIFT, 124}, {16, SHIFT, 125}, {40, SHIFT, 41}, },
			{{-1, REDUCE, 36}, },
			{{-1, REDUCE, 31}, },
			{{-1, REDUCE, 97}, },
			{{-1, ERROR, 173}, {28, SHIFT, 72}, {38, SHIFT, 177}, },
			{{-1, ERROR, 174}, {40, SHIFT, 178}, },
			{{-1, REDUCE, 34}, },
			{{-1, REDUCE, 33}, {15, SHIFT, 179}, },
			{{-1, ERROR, 177}, {40, SHIFT, 155}, },
			{{-1, ERROR, 178}, {36, SHIFT, 181}, },
			{{-1, ERROR, 179}, {9, SHIFT, 108}, {11, SHIFT, 121}, {12, SHIFT, 122}, {13, SHIFT, 123}, {14, SHIFT, 124}, {16, SHIFT, 125}, {40, SHIFT, 41}, },
			{{-1, ERROR, 180}, {36, SHIFT, 184}, },
			{{-1, ERROR, 181}, {9, SHIFT, 108}, {11, SHIFT, 121}, {12, SHIFT, 122}, {13, SHIFT, 123}, {14, SHIFT, 124}, {16, SHIFT, 125}, {40, SHIFT, 41}, },
			{{-1, REDUCE, 35}, },
			{{-1, REDUCE, 39}, },
			{{-1, ERROR, 184}, {9, SHIFT, 108}, {11, SHIFT, 121}, {12, SHIFT, 122}, {13, SHIFT, 123}, {14, SHIFT, 124}, {16, SHIFT, 125}, {40, SHIFT, 41}, },
			{{-1, REDUCE, 38}, },
			{{-1, REDUCE, 37}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 7}, },
			{{-1, 8}, {12, 20}, {134, 20}, },
			{{-1, 19}, },
			{{-1, 31}, {32, 67}, },
			{{-1, 60}, {0, 9}, {6, 17}, {12, 9}, {13, 22}, {21, 22}, {108, 126}, {134, 126}, {142, 158}, },
			{{-1, 25}, {25, 58}, {59, 84}, },
			{{-1, 10}, {4, 14}, },
			{{-1, 11}, {13, 23}, {21, 23}, },
			{{-1, 61}, {30, 66}, {63, 90}, {64, 91}, },
			{{-1, 88}, {89, 111}, },
			{{-1, 62}, {87, 110}, },
			{{-1, 127}, {86, 109}, {92, 114}, {112, 136}, {113, 137}, },
			{{-1, 128}, {141, 156}, {164, 171}, {177, 156}, },
			{{-1, 157}, {177, 180}, },
			{{-1, 165}, {166, 172}, },
			{{-1, 129}, {135, 153}, {151, 153}, {163, 170}, {169, 175}, {181, 185}, {184, 186}, },
			{{-1, 130}, {179, 182}, },
			{{-1, 131}, {169, 176}, {179, 183}, },
			{{-1, 42}, {108, 132}, {134, 132}, {135, 132}, {141, 132}, {151, 132}, {163, 132}, {164, 132}, {169, 132}, {177, 132}, {179, 132}, {181, 132}, {184, 132}, },
			{{-1, 43}, {40, 69}, {70, 94}, {71, 96}, {115, 138}, {125, 145}, {140, 154}, {143, 159}, {148, 161}, {167, 173}, },
			{{-1, 44}, {72, 97}, },
			{{-1, 45}, {74, 98}, },
			{{-1, 46}, {75, 99}, },
			{{-1, 47}, {76, 100}, },
			{{-1, 48}, {77, 101}, },
			{{-1, 49}, {78, 102}, },
			{{-1, 50}, {79, 103}, },
			{{-1, 51}, {80, 104}, },
			{{-1, 52}, {81, 105}, },
			{{-1, 53}, {82, 106}, },
			{{-1, 54}, {83, 107}, },
			{{-1, 55}, {39, 68}, },
			{{-1, 56}, },
			{{-1, 57}, {108, 133}, {134, 133}, {135, 133}, {151, 133}, {163, 133}, {169, 133}, {179, 133}, {181, 133}, {184, 133}, },
			{{-1, 95}, },
			{{-1, 116}, {117, 139}, },
			{{-1, 12}, {108, 134}, },
			{{-1, 13}, {12, 21}, },
			{{-1, 32}, },
			{{-1, 59}, },
			{{-1, 89}, },
			{{-1, 135}, {134, 151}, },
			{{-1, 166}, },
			{{-1, 117}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'caractere', 'numero', 'booleano', 'vetor', 'vazio', '->', EOF",
			"expecting: '[', id",
			"expecting: 'caractere', 'numero', 'booleano'",
			"expecting: id",
			"expecting: 'caractere', 'numero', 'booleano', 'vetor', 'vazio'",
			"expecting: EOF",
			"expecting: 'caractere', 'numero', 'booleano', 'vetor', 'vazio', 'inicio', 'fim', 'enquanto', 'para', 'para cada', 'se', 'retorne', '->', id, EOF",
			"expecting: '['",
			"expecting: '('",
			"expecting: '.', ',', '('",
			"expecting: '.'",
			"expecting: caractere, booleano, numero, vetor unidimensional, 'nao', '(', id",
			"expecting: 'caractere', 'numero', 'booleano', 'vetor', ')'",
			"expecting: '.', ','",
			"expecting: '+', '-', '*', '/', '>', '<', '>=', '<=', '=', 'e', 'ou', '.', ',', ']', ')', '|', ';'",
			"expecting: caractere, booleano, numero, vetor unidimensional, '(', id",
			"expecting: '+', '-', '*', '/', '>', '<', '>=', '<=', '=', 'e', 'ou', ':=', '.', ',', '[', ']', '(', ')', '|', ';'",
			"expecting: '+', '-', '*', '/', '>', '<', '>=', '<=', '=', 'e', 'ou', '.', ',', '[', ']', ')', '|', ';'",
			"expecting: 'ou', ']'",
			"expecting: 'e', 'ou', '.', ',', ']', ')', '|', ';'",
			"expecting: '=', 'e', 'ou', '.', ',', ']', ')', '|', ';'",
			"expecting: '<=', '=', 'e', 'ou', '.', ',', ']', ')', '|', ';'",
			"expecting: '>=', '<=', '=', 'e', 'ou', '.', ',', ']', ')', '|', ';'",
			"expecting: '<', '>=', '<=', '=', 'e', 'ou', '.', ',', ']', ')', '|', ';'",
			"expecting: '>', '<', '>=', '<=', '=', 'e', 'ou', '.', ',', ']', ')', '|', ';'",
			"expecting: '+', '>', '<', '>=', '<=', '=', 'e', 'ou', '.', ',', ']', ')', '|', ';'",
			"expecting: '+', '-', '>', '<', '>=', '<=', '=', 'e', 'ou', '.', ',', ']', ')', '|', ';'",
			"expecting: '+', '-', '*', '>', '<', '>=', '<=', '=', 'e', 'ou', '.', ',', ']', ')', '|', ';'",
			"expecting: ')'",
			"expecting: ')', '|'",
			"expecting: 'ou', ')'",
			"expecting: caractere, booleano, numero, vetor unidimensional, 'nao', '(', ')', id",
			"expecting: 'inicio'",
			"expecting: 'caractere', 'numero', 'booleano', 'vetor'",
			"expecting: 'ou', ')', '|'",
			"expecting: 'caractere', 'numero', 'booleano', 'vetor', 'inicio', 'fim', 'enquanto', 'para', 'para cada', 'se', 'retorne', id",
			"expecting: '+', '-', '*', '/', '>', '<', '>=', '<=', '=', 'e', 'ou', ':=', '.', ',', '[', ']', ')', '|', ';'",
			"expecting: 'caractere', 'numero', 'booleano', 'vetor', 'vazio', 'inicio', 'fim', 'enquanto', 'para', 'para cada', 'se', 'senao', 'retorne', '->', id, EOF",
			"expecting: caractere, booleano, numero, vetor unidimensional, 'nao', '.', '(', id",
			"expecting: 'inicio', 'fim', 'enquanto', 'para', 'para cada', 'se', 'senao', 'retorne', id",
			"expecting: 'inicio', 'fim', 'enquanto', 'para', 'para cada', 'se', 'retorne', id",
			"expecting: ':=', '['",
			"expecting: 'ou', '.'",
			"expecting: ',', ')', ';'",
			"expecting: ';'",
			"expecting: 'ou', '.', ',', ')', ';'",
			"expecting: 'inicio', 'enquanto', 'para', 'para cada', 'se', 'retorne', id",
			"expecting: ':'",
			"expecting: 'ou', ';'",
        };*/
    private static int[] errors;
/*      {
			0, 1, 1, 1, 2, 3, 4, 5, 6, 3, 3, 0, 0, 0, 7, 8, 3, 3, 9, 10, 6, 0, 3, 0, 11, 1, 12, 8, 8, 3, 12, 13, 13, 6, 8, 14, 14, 14, 14, 15, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 14, 14, 14, 14, 14, 1, 1, 3, 28, 29, 12, 12, 13, 28, 13, 14, 30, 31, 11, 11, 1, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 1, 29, 32, 33, 29, 29, 28, 28, 32, 14, 34, 28, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 14, 14, 35, 0, 29, 29, 32, 32, 0, 11, 29, 29, 14, 36, 37, 8, 8, 8, 8, 38, 3, 39, 10, 40, 40, 40, 41, 10, 35, 40, 0, 0, 34, 29, 11, 3, 33, 11, 39, 42, 13, 39, 11, 39, 37, 40, 37, 40, 30, 41, 43, 44, 3, 30, 39, 45, 37, 46, 3, 43, 43, 11, 47, 46, 40, 43, 43, 48, 3, 40, 39, 3, 28, 46, 28, 46, 40, 39, 46, 40, 40, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
