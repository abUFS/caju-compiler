/* This file was generated by SableCC (http://www.sablecc.org/). */

package caju.node;

import caju.analysis.*;

@SuppressWarnings("nls")
public final class AArDecVariavelADecVariavel extends PADecVariavel
{
    private PATipo _aTipo_;
    private PAListaNomes _aListaNomes_;

    public AArDecVariavelADecVariavel()
    {
        // Constructor
    }

    public AArDecVariavelADecVariavel(
        @SuppressWarnings("hiding") PATipo _aTipo_,
        @SuppressWarnings("hiding") PAListaNomes _aListaNomes_)
    {
        // Constructor
        setATipo(_aTipo_);

        setAListaNomes(_aListaNomes_);

    }

    @Override
    public Object clone()
    {
        return new AArDecVariavelADecVariavel(
            cloneNode(this._aTipo_),
            cloneNode(this._aListaNomes_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAArDecVariavelADecVariavel(this);
    }

    public PATipo getATipo()
    {
        return this._aTipo_;
    }

    public void setATipo(PATipo node)
    {
        if(this._aTipo_ != null)
        {
            this._aTipo_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._aTipo_ = node;
    }

    public PAListaNomes getAListaNomes()
    {
        return this._aListaNomes_;
    }

    public void setAListaNomes(PAListaNomes node)
    {
        if(this._aListaNomes_ != null)
        {
            this._aListaNomes_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._aListaNomes_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._aTipo_)
            + toString(this._aListaNomes_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._aTipo_ == child)
        {
            this._aTipo_ = null;
            return;
        }

        if(this._aListaNomes_ == child)
        {
            this._aListaNomes_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._aTipo_ == oldChild)
        {
            setATipo((PATipo) newChild);
            return;
        }

        if(this._aListaNomes_ == oldChild)
        {
            setAListaNomes((PAListaNomes) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
