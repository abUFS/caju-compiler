/* This file was generated by SableCC (http://www.sablecc.org/). */

package caju.node;

import java.util.*;
import caju.analysis.*;

@SuppressWarnings("nls")
public final class AArBlocoABloco extends PABloco
{
    private final LinkedList<PADecVariavel> _aDecVariavel_ = new LinkedList<PADecVariavel>();
    private final LinkedList<PAComando> _aComando_ = new LinkedList<PAComando>();

    public AArBlocoABloco()
    {
        // Constructor
    }

    public AArBlocoABloco(
        @SuppressWarnings("hiding") List<?> _aDecVariavel_,
        @SuppressWarnings("hiding") List<?> _aComando_)
    {
        // Constructor
        setADecVariavel(_aDecVariavel_);

        setAComando(_aComando_);

    }

    @Override
    public Object clone()
    {
        return new AArBlocoABloco(
            cloneList(this._aDecVariavel_),
            cloneList(this._aComando_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAArBlocoABloco(this);
    }

    public LinkedList<PADecVariavel> getADecVariavel()
    {
        return this._aDecVariavel_;
    }

    public void setADecVariavel(List<?> list)
    {
        for(PADecVariavel e : this._aDecVariavel_)
        {
            e.parent(null);
        }
        this._aDecVariavel_.clear();

        for(Object obj_e : list)
        {
            PADecVariavel e = (PADecVariavel) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._aDecVariavel_.add(e);
        }
    }

    public LinkedList<PAComando> getAComando()
    {
        return this._aComando_;
    }

    public void setAComando(List<?> list)
    {
        for(PAComando e : this._aComando_)
        {
            e.parent(null);
        }
        this._aComando_.clear();

        for(Object obj_e : list)
        {
            PAComando e = (PAComando) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._aComando_.add(e);
        }
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._aDecVariavel_)
            + toString(this._aComando_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._aDecVariavel_.remove(child))
        {
            return;
        }

        if(this._aComando_.remove(child))
        {
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        for(ListIterator<PADecVariavel> i = this._aDecVariavel_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PADecVariavel) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        for(ListIterator<PAComando> i = this._aComando_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PAComando) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        throw new RuntimeException("Not a child.");
    }
}
