/* This file was generated by SableCC (http://www.sablecc.org/). */

package caju.node;

import caju.analysis.*;

@SuppressWarnings("nls")
public final class AArDecFuncaoADecFuncao extends PADecFuncao
{
    private PATipoRetorno _aTipoRetorno_;
    private TId _id_;
    private PAParametros _aParametros_;
    private PABloco _aBloco_;

    public AArDecFuncaoADecFuncao()
    {
        // Constructor
    }

    public AArDecFuncaoADecFuncao(
        @SuppressWarnings("hiding") PATipoRetorno _aTipoRetorno_,
        @SuppressWarnings("hiding") TId _id_,
        @SuppressWarnings("hiding") PAParametros _aParametros_,
        @SuppressWarnings("hiding") PABloco _aBloco_)
    {
        // Constructor
        setATipoRetorno(_aTipoRetorno_);

        setId(_id_);

        setAParametros(_aParametros_);

        setABloco(_aBloco_);

    }

    @Override
    public Object clone()
    {
        return new AArDecFuncaoADecFuncao(
            cloneNode(this._aTipoRetorno_),
            cloneNode(this._id_),
            cloneNode(this._aParametros_),
            cloneNode(this._aBloco_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAArDecFuncaoADecFuncao(this);
    }

    public PATipoRetorno getATipoRetorno()
    {
        return this._aTipoRetorno_;
    }

    public void setATipoRetorno(PATipoRetorno node)
    {
        if(this._aTipoRetorno_ != null)
        {
            this._aTipoRetorno_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._aTipoRetorno_ = node;
    }

    public TId getId()
    {
        return this._id_;
    }

    public void setId(TId node)
    {
        if(this._id_ != null)
        {
            this._id_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._id_ = node;
    }

    public PAParametros getAParametros()
    {
        return this._aParametros_;
    }

    public void setAParametros(PAParametros node)
    {
        if(this._aParametros_ != null)
        {
            this._aParametros_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._aParametros_ = node;
    }

    public PABloco getABloco()
    {
        return this._aBloco_;
    }

    public void setABloco(PABloco node)
    {
        if(this._aBloco_ != null)
        {
            this._aBloco_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._aBloco_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._aTipoRetorno_)
            + toString(this._id_)
            + toString(this._aParametros_)
            + toString(this._aBloco_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._aTipoRetorno_ == child)
        {
            this._aTipoRetorno_ = null;
            return;
        }

        if(this._id_ == child)
        {
            this._id_ = null;
            return;
        }

        if(this._aParametros_ == child)
        {
            this._aParametros_ = null;
            return;
        }

        if(this._aBloco_ == child)
        {
            this._aBloco_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._aTipoRetorno_ == oldChild)
        {
            setATipoRetorno((PATipoRetorno) newChild);
            return;
        }

        if(this._id_ == oldChild)
        {
            setId((TId) newChild);
            return;
        }

        if(this._aParametros_ == oldChild)
        {
            setAParametros((PAParametros) newChild);
            return;
        }

        if(this._aBloco_ == oldChild)
        {
            setABloco((PABloco) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
