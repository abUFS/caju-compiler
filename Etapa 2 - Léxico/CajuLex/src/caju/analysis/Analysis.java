/* This file was generated by SableCC (http://www.sablecc.org/). */

package caju.analysis;

import caju.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseTIgnorar(TIgnorar node);
    void caseTBaseCaractere(TBaseCaractere node);
    void caseTBaseNumero(TBaseNumero node);
    void caseTBaseBooleano(TBaseBooleano node);
    void caseTVetor(TVetor node);
    void caseTVazio(TVazio node);
    void caseTCaracter(TCaracter node);
    void caseTVerdadeiro(TVerdadeiro node);
    void caseTFalso(TFalso node);
    void caseTNumero(TNumero node);
    void caseTVetorUnidimensional(TVetorUnidimensional node);
    void caseTInicio(TInicio node);
    void caseTFim(TFim node);
    void caseTComentLinha(TComentLinha node);
    void caseTComentBloco(TComentBloco node);
    void caseTEnquanto(TEnquanto node);
    void caseTPara(TPara node);
    void caseTParaCada(TParaCada node);
    void caseTSe(TSe node);
    void caseTSenao(TSenao node);
    void caseTRetorne(TRetorne node);
    void caseTMais(TMais node);
    void caseTMenos(TMenos node);
    void caseTMult(TMult node);
    void caseTDiv(TDiv node);
    void caseTMaior(TMaior node);
    void caseTMenor(TMenor node);
    void caseTMaiorIgual(TMaiorIgual node);
    void caseTMenorIgual(TMenorIgual node);
    void caseTIgual(TIgual node);
    void caseTNao(TNao node);
    void caseTE(TE node);
    void caseTOu(TOu node);
    void caseTAtribuir(TAtribuir node);
    void caseTPontoFinal(TPontoFinal node);
    void caseTExibir(TExibir node);
    void caseTLer(TLer node);
    void caseTVirgula(TVirgula node);
    void caseTAbreColchete(TAbreColchete node);
    void caseTFechaColchete(TFechaColchete node);
    void caseTSeta(TSeta node);
    void caseTAbreParenteses(TAbreParenteses node);
    void caseTFechaParenteses(TFechaParenteses node);
    void caseTPipe(TPipe node);
    void caseTPontoVirgula(TPontoVirgula node);
    void caseTDoisPontos(TDoisPontos node);
    void caseTId(TId node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
